{
  "lockFileVersion": 6,
  "moduleFileHash": "851f3ca88adcbfafa2880d0697f098c8b087b242f8b44f6fc4ac9d103e25b65f",
  "flags": {
    "cmdRegistries": [
      "https://bcr.bazel.build/"
    ],
    "cmdModuleOverrides": {},
    "allowedYankedVersions": [],
    "envVarAllowedYankedVersions": "",
    "ignoreDevDependency": false,
    "directDependenciesMode": "WARNING",
    "compatibilityMode": "ERROR"
  },
  "localOverrideHashes": {
    "bazel_tools": "1ae69322ac3823527337acf02016e8ee95813d8d356f47060255b8956fa642f0"
  },
  "moduleDepGraph": {
    "<root>": {
      "name": "dummy",
      "version": "",
      "key": "<root>",
      "repoName": "dummy",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@io_bazel_rules_go//go:extensions.bzl",
          "extensionName": "go_sdk",
          "usingModule": "<root>",
          "location": {
            "file": "@@//:MODULE.bazel",
            "line": 14,
            "column": 23
          },
          "imports": {},
          "devImports": [],
          "tags": [
            {
              "tagName": "download",
              "attributeValues": {
                "version": "1.22.3"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 15,
                "column": 16
              }
            },
            {
              "tagName": "host",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 16,
                "column": 12
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@gazelle//:extensions.bzl",
          "extensionName": "go_deps",
          "usingModule": "<root>",
          "location": {
            "file": "@@//:MODULE.bazel",
            "line": 18,
            "column": 24
          },
          "imports": {
            "com_github_go_chi_chi_v5": "com_github_go_chi_chi_v5",
            "com_github_go_chi_cors": "com_github_go_chi_cors",
            "org_golang_google_grpc": "org_golang_google_grpc"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "from_file",
              "attributeValues": {
                "go_mod": "//:go.mod"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 19,
                "column": 18
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_python//python/extensions:python.bzl",
          "extensionName": "python",
          "usingModule": "<root>",
          "location": {
            "file": "@@//:MODULE.bazel",
            "line": 27,
            "column": 23
          },
          "imports": {},
          "devImports": [],
          "tags": [
            {
              "tagName": "toolchain",
              "attributeValues": {
                "configure_coverage_tool": true,
                "ignore_root_user_error": true,
                "python_version": "3.12"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 28,
                "column": 17
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_python//python/extensions:pip.bzl",
          "extensionName": "pip",
          "usingModule": "<root>",
          "location": {
            "file": "@@//:MODULE.bazel",
            "line": 34,
            "column": 20
          },
          "imports": {
            "pip": "pip"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "parse",
              "attributeValues": {
                "hub_name": "pip",
                "python_version": "3.12",
                "requirements_lock": "//:requirements_lock.txt"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 35,
                "column": 10
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "gazelle": "gazelle@0.39.1",
        "com_google_absl": "abseil-cpp@20240116.2",
        "io_bazel_rules_go": "rules_go@0.50.1",
        "rules_python": "rules_python@0.38.0",
        "rules_python_gazelle_plugin": "rules_python_gazelle_plugin@0.38.0",
        "pybind11_bazel": "pybind11_bazel@2.13.6",
        "rules_proto": "rules_proto@6.0.2",
        "rules_proto_grpc_cpp": "rules_proto_grpc_cpp@5.0.0",
        "rules_proto_grpc_go": "rules_proto_grpc_go@5.0.0",
        "rules_proto_grpc_python": "rules_proto_grpc_python@5.0.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      }
    },
    "gazelle@0.39.1": {
      "name": "gazelle",
      "version": "0.39.1",
      "key": "gazelle@0.39.1",
      "repoName": "bazel_gazelle",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@io_bazel_rules_go//go:extensions.bzl",
          "extensionName": "go_sdk",
          "usingModule": "gazelle@0.39.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/gazelle/0.39.1/MODULE.bazel",
            "line": 15,
            "column": 23
          },
          "imports": {
            "go_host_compatible_sdk_label": "go_host_compatible_sdk_label"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_gazelle//internal/bzlmod:non_module_deps.bzl",
          "extensionName": "non_module_deps",
          "usingModule": "gazelle@0.39.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/gazelle/0.39.1/MODULE.bazel",
            "line": 23,
            "column": 32
          },
          "imports": {
            "bazel_gazelle_go_repository_cache": "bazel_gazelle_go_repository_cache",
            "bazel_gazelle_go_repository_tools": "bazel_gazelle_go_repository_tools",
            "bazel_gazelle_is_bazel_module": "bazel_gazelle_is_bazel_module"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_gazelle//:extensions.bzl",
          "extensionName": "go_deps",
          "usingModule": "gazelle@0.39.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/gazelle/0.39.1/MODULE.bazel",
            "line": 31,
            "column": 24
          },
          "imports": {
            "com_github_bazelbuild_buildtools": "com_github_bazelbuild_buildtools",
            "com_github_bmatcuk_doublestar_v4": "com_github_bmatcuk_doublestar_v4",
            "com_github_fsnotify_fsnotify": "com_github_fsnotify_fsnotify",
            "com_github_google_go_cmp": "com_github_google_go_cmp",
            "com_github_pmezard_go_difflib": "com_github_pmezard_go_difflib",
            "org_golang_x_mod": "org_golang_x_mod",
            "org_golang_x_sync": "org_golang_x_sync",
            "org_golang_x_tools": "org_golang_x_tools",
            "org_golang_x_tools_go_vcs": "org_golang_x_tools_go_vcs",
            "bazel_gazelle_go_repository_config": "bazel_gazelle_go_repository_config",
            "com_github_golang_protobuf": "com_github_golang_protobuf",
            "org_golang_google_protobuf": "org_golang_google_protobuf"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "from_file",
              "attributeValues": {
                "go_mod": "//:go.mod"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/gazelle/0.39.1/MODULE.bazel",
                "line": 32,
                "column": 18
              }
            },
            {
              "tagName": "module",
              "attributeValues": {
                "path": "golang.org/x/tools",
                "sum": "h1:k8NLag8AGHnn+PHbl7g43CtqZAwG60vZkLqgyZgIHgQ=",
                "version": "v0.18.0"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/gazelle/0.39.1/MODULE.bazel",
                "line": 36,
                "column": 15
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_features": "bazel_features@1.9.1",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "com_google_protobuf": "protobuf@27.1",
        "io_bazel_rules_go": "rules_go@0.50.1",
        "rules_license": "rules_license@1.0.0",
        "rules_proto": "rules_proto@6.0.2",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/bazelbuild/bazel-gazelle/releases/download/v0.39.1/bazel-gazelle-v0.39.1.tar.gz"
          ],
          "integrity": "sha256-t2D3/nUXOIYAf3wuYWohJBII89kOhlfcZdNqdx6Ra2o=",
          "strip_prefix": "",
          "remote_patches": {
            "https://bcr.bazel.build/modules/gazelle/0.39.1/patches/module_dot_bazel_version.patch": "sha256-FrUaJmxzqoJNGR4P9ZqlhRM0SYxIurRdDi48cL3A7cg="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "abseil-cpp@20240116.2": {
      "name": "abseil-cpp",
      "version": "20240116.2",
      "key": "abseil-cpp@20240116.2",
      "repoName": "abseil-cpp",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.7.1",
        "com_google_googletest": "googletest@1.14.0.bcr.1",
        "platforms": "platforms@0.0.10",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/abseil/abseil-cpp/releases/download/20240116.2/abseil-cpp-20240116.2.tar.gz"
          ],
          "integrity": "sha256-czcmuMOm05pBINfkXqi0GkNM2s3kAculAPFCNsSbOdw=",
          "strip_prefix": "abseil-cpp-20240116.2",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "rules_go@0.50.1": {
      "name": "rules_go",
      "version": "0.50.1",
      "key": "rules_go@0.50.1",
      "repoName": "io_bazel_rules_go",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@go_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@io_bazel_rules_go//go:extensions.bzl",
          "extensionName": "go_sdk",
          "usingModule": "rules_go@0.50.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_go/0.50.1/MODULE.bazel",
            "line": 16,
            "column": 23
          },
          "imports": {
            "go_toolchains": "go_toolchains",
            "io_bazel_rules_nogo": "io_bazel_rules_nogo"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "download",
              "attributeValues": {
                "name": "go_default_sdk",
                "version": "1.21.8"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_go/0.50.1/MODULE.bazel",
                "line": 17,
                "column": 16
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@gazelle//:extensions.bzl",
          "extensionName": "go_deps",
          "usingModule": "rules_go@0.50.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_go/0.50.1/MODULE.bazel",
            "line": 31,
            "column": 24
          },
          "imports": {
            "com_github_gogo_protobuf": "com_github_gogo_protobuf",
            "com_github_golang_mock": "com_github_golang_mock",
            "com_github_golang_protobuf": "com_github_golang_protobuf",
            "org_golang_google_genproto": "org_golang_google_genproto",
            "org_golang_google_grpc": "org_golang_google_grpc",
            "org_golang_google_grpc_cmd_protoc_gen_go_grpc": "org_golang_google_grpc_cmd_protoc_gen_go_grpc",
            "org_golang_google_protobuf": "org_golang_google_protobuf",
            "org_golang_x_net": "org_golang_x_net",
            "org_golang_x_tools": "org_golang_x_tools",
            "bazel_gazelle_go_repository_config": "bazel_gazelle_go_repository_config"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "from_file",
              "attributeValues": {
                "go_mod": "//:go.mod"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_go/0.50.1/MODULE.bazel",
                "line": 32,
                "column": 18
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "io_bazel_rules_go_bazel_features": "bazel_features@1.9.1",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "platforms": "platforms@0.0.10",
        "rules_proto": "rules_proto@6.0.2",
        "com_google_protobuf": "protobuf@27.1",
        "gazelle": "gazelle@0.39.1",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/bazelbuild/rules_go/releases/download/v0.50.1/rules_go-v0.50.1.zip"
          ],
          "integrity": "sha256-9KkxRRjKas+hbMSrQ7C4zh5OpkuBw42KN3KIPxUzRrg=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "rules_python@0.38.0": {
      "name": "rules_python",
      "version": "0.38.0",
      "key": "rules_python@0.38.0",
      "repoName": "rules_python",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@pythons_hub//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_python//python/private:internal_deps.bzl",
          "extensionName": "internal_deps",
          "usingModule": "rules_python@0.38.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_python/0.38.0/MODULE.bazel",
            "line": 16,
            "column": 30
          },
          "imports": {
            "pypi__build": "pypi__build",
            "pypi__click": "pypi__click",
            "pypi__colorama": "pypi__colorama",
            "pypi__importlib_metadata": "pypi__importlib_metadata",
            "pypi__installer": "pypi__installer",
            "pypi__more_itertools": "pypi__more_itertools",
            "pypi__packaging": "pypi__packaging",
            "pypi__pep517": "pypi__pep517",
            "pypi__pip": "pypi__pip",
            "pypi__pip_tools": "pypi__pip_tools",
            "pypi__pyproject_hooks": "pypi__pyproject_hooks",
            "pypi__setuptools": "pypi__setuptools",
            "pypi__tomli": "pypi__tomli",
            "pypi__wheel": "pypi__wheel",
            "pypi__zipp": "pypi__zipp",
            "rules_python_internal": "rules_python_internal"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_python//python/extensions:python.bzl",
          "extensionName": "python",
          "usingModule": "rules_python@0.38.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_python/0.38.0/MODULE.bazel",
            "line": 39,
            "column": 23
          },
          "imports": {
            "python_3_11": "python_3_11",
            "python_versions": "python_versions",
            "pythons_hub": "pythons_hub"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "toolchain",
              "attributeValues": {
                "is_default": true,
                "python_version": "3.11"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_python/0.38.0/MODULE.bazel",
                "line": 45,
                "column": 17
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_python//python/private/pypi:pip.bzl",
          "extensionName": "pip_internal",
          "usingModule": "rules_python@0.38.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_python/0.38.0/MODULE.bazel",
            "line": 57,
            "column": 20
          },
          "imports": {
            "rules_python_publish_deps": "rules_python_publish_deps"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "parse",
              "attributeValues": {
                "download_only": false,
                "experimental_index_url": "https://pypi.org/simple",
                "hub_name": "rules_python_publish_deps",
                "python_version": "3.11",
                "requirements_by_platform": {
                  "//tools/publish:requirements_darwin.txt": "osx_*",
                  "//tools/publish:requirements_linux.txt": "linux_*",
                  "//tools/publish:requirements_windows.txt": "windows_*"
                }
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_python/0.38.0/MODULE.bazel",
                "line": 58,
                "column": 10
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_features": "bazel_features@1.9.1",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "rules_cc": "rules_cc@0.0.9",
        "platforms": "platforms@0.0.10",
        "rules_proto": "rules_proto@6.0.2",
        "com_google_protobuf": "protobuf@27.1",
        "io_bazel_stardoc": "stardoc@0.6.2",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/bazelbuild/rules_python/releases/download/0.38.0/rules_python-0.38.0.tar.gz"
          ],
          "integrity": "sha256-yiZxUpiE4+y1t51qVgjHNzqCB4w1U7H6UyBua53dqzQ=",
          "strip_prefix": "rules_python-0.38.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_python/0.38.0/patches/module_dot_bazel_version.patch": "sha256-Q+ck8lxoHMVatKeLE+u3SIUpOL/CR8tgQ0ji8pHS9NQ="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "rules_python_gazelle_plugin@0.38.0": {
      "name": "rules_python_gazelle_plugin",
      "version": "0.38.0",
      "key": "rules_python_gazelle_plugin@0.38.0",
      "repoName": "rules_python_gazelle_plugin",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@bazel_gazelle//:extensions.bzl",
          "extensionName": "go_deps",
          "usingModule": "rules_python_gazelle_plugin@0.38.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_python_gazelle_plugin/0.38.0/MODULE.bazel",
            "line": 17,
            "column": 24
          },
          "imports": {
            "com_github_bazelbuild_buildtools": "com_github_bazelbuild_buildtools",
            "com_github_bmatcuk_doublestar_v4": "com_github_bmatcuk_doublestar_v4",
            "com_github_emirpasic_gods": "com_github_emirpasic_gods",
            "com_github_ghodss_yaml": "com_github_ghodss_yaml",
            "com_github_smacker_go_tree_sitter": "com_github_smacker_go_tree_sitter",
            "com_github_stretchr_testify": "com_github_stretchr_testify",
            "in_gopkg_yaml_v2": "in_gopkg_yaml_v2",
            "org_golang_x_sync": "org_golang_x_sync"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "from_file",
              "attributeValues": {
                "go_mod": "//:go.mod"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_python_gazelle_plugin/0.38.0/MODULE.bazel",
                "line": 18,
                "column": 18
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_python_gazelle_plugin//python:extensions.bzl",
          "extensionName": "python_stdlib_list",
          "usingModule": "rules_python_gazelle_plugin@0.38.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_python_gazelle_plugin/0.38.0/MODULE.bazel",
            "line": 31,
            "column": 35
          },
          "imports": {
            "python_stdlib_list": "python_stdlib_list"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.7.1",
        "rules_python": "rules_python@0.38.0",
        "io_bazel_rules_go": "rules_go@0.50.1",
        "bazel_gazelle": "gazelle@0.39.1",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/bazelbuild/rules_python/releases/download/0.38.0/rules_python-0.38.0.tar.gz"
          ],
          "integrity": "sha256-yiZxUpiE4+y1t51qVgjHNzqCB4w1U7H6UyBua53dqzQ=",
          "strip_prefix": "rules_python-0.38.0/gazelle",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_python_gazelle_plugin/0.38.0/patches/module_dot_bazel_version.patch": "sha256-VVi00O+3KS1q39fSq+n6rKP6Xb2ZoYKhArewfllSLQA="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "pybind11_bazel@2.13.6": {
      "name": "pybind11_bazel",
      "version": "2.13.6",
      "key": "pybind11_bazel@2.13.6",
      "repoName": "pybind11_bazel",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@pybind11_bazel//:internal_configure.bzl",
          "extensionName": "internal_configure_extension",
          "usingModule": "pybind11_bazel@2.13.6",
          "location": {
            "file": "https://bcr.bazel.build/modules/pybind11_bazel/2.13.6/MODULE.bazel",
            "line": 12,
            "column": 35
          },
          "imports": {
            "pybind11": "pybind11"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.7.1",
        "platforms": "platforms@0.0.10",
        "rules_cc": "rules_cc@0.0.9",
        "rules_python": "rules_python@0.38.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/pybind/pybind11_bazel/releases/download/v2.13.6/pybind11_bazel-2.13.6.tar.gz"
          ],
          "integrity": "sha256-yuaAZwv6boJwPAPyo8mVQIzcv0NhbXvdGY70XTwydzE=",
          "strip_prefix": "pybind11_bazel-2.13.6",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "rules_proto@6.0.2": {
      "name": "rules_proto",
      "version": "6.0.2",
      "key": "rules_proto@6.0.2",
      "repoName": "rules_proto",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "bazel_features": "bazel_features@1.9.1",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "rules_cc": "rules_cc@0.0.9",
        "rules_license": "rules_license@1.0.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/bazelbuild/rules_proto/releases/download/6.0.2/rules_proto-6.0.2.tar.gz"
          ],
          "integrity": "sha256-b7Z2fRvvU1MQVH4DJH91GLA0h3QMEbbGrbeVIDP+EpU=",
          "strip_prefix": "rules_proto-6.0.2",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_proto/6.0.2/patches/module_dot_bazel_version.patch": "sha256-mSkx6yiEGJElbRauESSW2YIUz1r8vRqmVAYOhV/Sjwc="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "rules_proto_grpc_cpp@5.0.0": {
      "name": "rules_proto_grpc_cpp",
      "version": "5.0.0",
      "key": "rules_proto_grpc_cpp@5.0.0",
      "repoName": "rules_proto_grpc_cpp",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "grpc": "grpc@1.65.0",
        "protobuf": "protobuf@27.1",
        "rules_cc": "rules_cc@0.0.9",
        "rules_proto_grpc": "rules_proto_grpc@5.0.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/rules-proto-grpc/rules_proto_grpc/releases/download/5.0.0/rules_proto_grpc_cpp-5.0.0.tar.gz"
          ],
          "integrity": "sha256-M/9diGU25CkGcoCvg4rzN4tULxM38Wk2iYu8WkZTifI=",
          "strip_prefix": "rules_proto_grpc_cpp-5.0.0",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "rules_proto_grpc_go@5.0.0": {
      "name": "rules_proto_grpc_go",
      "version": "5.0.0",
      "key": "rules_proto_grpc_go@5.0.0",
      "repoName": "rules_proto_grpc_go",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@gazelle//:extensions.bzl",
          "extensionName": "go_deps",
          "usingModule": "rules_proto_grpc_go@5.0.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_proto_grpc_go/5.0.0/MODULE.bazel",
            "line": 11,
            "column": 24
          },
          "imports": {
            "org_golang_google_genproto_googleapis_rpc": "org_golang_google_genproto_googleapis_rpc",
            "org_golang_google_grpc": "org_golang_google_grpc",
            "org_golang_google_grpc_cmd_protoc_gen_go_grpc": "org_golang_google_grpc_cmd_protoc_gen_go_grpc",
            "org_golang_google_protobuf": "org_golang_google_protobuf"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "module",
              "attributeValues": {
                "path": "google.golang.org/protobuf",
                "sum": "h1:6xV6lTsCfpGD21XK49h7MhtcApnLqkfYgPcdHftf6hg=",
                "version": "v1.34.2"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_proto_grpc_go/5.0.0/MODULE.bazel",
                "line": 12,
                "column": 15
              }
            },
            {
              "tagName": "module",
              "attributeValues": {
                "path": "google.golang.org/grpc",
                "sum": "h1:bs/cUb4lp1G5iImFFd3u5ixQzweKizoZJAwBNLR42lc=",
                "version": "v1.65.0"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_proto_grpc_go/5.0.0/MODULE.bazel",
                "line": 17,
                "column": 15
              }
            },
            {
              "tagName": "module",
              "attributeValues": {
                "path": "google.golang.org/grpc/cmd/protoc-gen-go-grpc",
                "sum": "h1:9SxA29VM43MF5Z9dQu694wmY5t8E/Gxr7s+RSxiIDmc=",
                "version": "v1.4.0"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_proto_grpc_go/5.0.0/MODULE.bazel",
                "line": 22,
                "column": 15
              }
            },
            {
              "tagName": "module",
              "attributeValues": {
                "path": "google.golang.org/genproto/googleapis/rpc",
                "sum": "h1:04+jVzTs2XBnOZcPsLnmrTGqltqJbZQ1Ey26hjYdQQ0=",
                "version": "v0.0.0-20240708141625-4ad9e859172b"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_proto_grpc_go/5.0.0/MODULE.bazel",
                "line": 27,
                "column": 15
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "gazelle": "gazelle@0.39.1",
        "rules_go": "rules_go@0.50.1",
        "rules_proto_grpc": "rules_proto_grpc@5.0.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/rules-proto-grpc/rules_proto_grpc/releases/download/5.0.0/rules_proto_grpc_go-5.0.0.tar.gz"
          ],
          "integrity": "sha256-hW3hZBGSpl/Vyu9sCjzoTaIm18ljGOburFHqx/nL2us=",
          "strip_prefix": "rules_proto_grpc_go-5.0.0",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "rules_proto_grpc_python@5.0.0": {
      "name": "rules_proto_grpc_python",
      "version": "5.0.0",
      "key": "rules_proto_grpc_python@5.0.0",
      "repoName": "rules_proto_grpc_python",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_python//python/extensions:python.bzl",
          "extensionName": "python",
          "usingModule": "rules_proto_grpc_python@5.0.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_proto_grpc_python/5.0.0/MODULE.bazel",
            "line": 19,
            "column": 23
          },
          "imports": {},
          "devImports": [],
          "tags": [
            {
              "tagName": "toolchain",
              "attributeValues": {
                "is_default": false,
                "python_version": "3.8"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_proto_grpc_python/5.0.0/MODULE.bazel",
                "line": 22,
                "column": 21
              }
            },
            {
              "tagName": "toolchain",
              "attributeValues": {
                "is_default": false,
                "python_version": "3.9"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_proto_grpc_python/5.0.0/MODULE.bazel",
                "line": 22,
                "column": 21
              }
            },
            {
              "tagName": "toolchain",
              "attributeValues": {
                "is_default": false,
                "python_version": "3.10"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_proto_grpc_python/5.0.0/MODULE.bazel",
                "line": 22,
                "column": 21
              }
            },
            {
              "tagName": "toolchain",
              "attributeValues": {
                "is_default": false,
                "python_version": "3.11"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_proto_grpc_python/5.0.0/MODULE.bazel",
                "line": 22,
                "column": 21
              }
            },
            {
              "tagName": "toolchain",
              "attributeValues": {
                "is_default": true,
                "python_version": "3.12"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_proto_grpc_python/5.0.0/MODULE.bazel",
                "line": 22,
                "column": 21
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_python//python/extensions:pip.bzl",
          "extensionName": "pip",
          "usingModule": "rules_proto_grpc_python@5.0.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_proto_grpc_python/5.0.0/MODULE.bazel",
            "line": 29,
            "column": 20
          },
          "imports": {
            "rules_proto_grpc_python_pip_deps": "rules_proto_grpc_python_pip_deps"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "parse",
              "attributeValues": {
                "hub_name": "rules_proto_grpc_python_pip_deps",
                "python_version": "3.8",
                "requirements_lock": "//:requirements.txt"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_proto_grpc_python/5.0.0/MODULE.bazel",
                "line": 32,
                "column": 14
              }
            },
            {
              "tagName": "parse",
              "attributeValues": {
                "hub_name": "rules_proto_grpc_python_pip_deps",
                "python_version": "3.9",
                "requirements_lock": "//:requirements.txt"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_proto_grpc_python/5.0.0/MODULE.bazel",
                "line": 32,
                "column": 14
              }
            },
            {
              "tagName": "parse",
              "attributeValues": {
                "hub_name": "rules_proto_grpc_python_pip_deps",
                "python_version": "3.10",
                "requirements_lock": "//:requirements.txt"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_proto_grpc_python/5.0.0/MODULE.bazel",
                "line": 32,
                "column": 14
              }
            },
            {
              "tagName": "parse",
              "attributeValues": {
                "hub_name": "rules_proto_grpc_python_pip_deps",
                "python_version": "3.11",
                "requirements_lock": "//:requirements.txt"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_proto_grpc_python/5.0.0/MODULE.bazel",
                "line": 32,
                "column": 14
              }
            },
            {
              "tagName": "parse",
              "attributeValues": {
                "hub_name": "rules_proto_grpc_python_pip_deps",
                "python_version": "3.12",
                "requirements_lock": "//:requirements.txt"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_proto_grpc_python/5.0.0/MODULE.bazel",
                "line": 32,
                "column": 14
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "grpc": "grpc@1.65.0",
        "rules_proto_grpc": "rules_proto_grpc@5.0.0",
        "rules_python": "rules_python@0.38.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/rules-proto-grpc/rules_proto_grpc/releases/download/5.0.0/rules_proto_grpc_python-5.0.0.tar.gz"
          ],
          "integrity": "sha256-b9r/nAMUoakRmZn2IlVYhaNYgNUXeWHGV4wgd2cCmV8=",
          "strip_prefix": "rules_proto_grpc_python-5.0.0",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "bazel_tools@_": {
      "name": "bazel_tools",
      "version": "",
      "key": "bazel_tools@_",
      "repoName": "bazel_tools",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@local_config_cc_toolchains//:all",
        "@local_config_sh//:local_sh_toolchain"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@bazel_tools//tools/cpp:cc_configure.bzl",
          "extensionName": "cc_configure_extension",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 18,
            "column": 29
          },
          "imports": {
            "local_config_cc": "local_config_cc",
            "local_config_cc_toolchains": "local_config_cc_toolchains"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_tools//tools/osx:xcode_configure.bzl",
          "extensionName": "xcode_configure_extension",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 22,
            "column": 32
          },
          "imports": {
            "local_config_xcode": "local_config_xcode"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_java//java:extensions.bzl",
          "extensionName": "toolchains",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 25,
            "column": 32
          },
          "imports": {
            "local_jdk": "local_jdk",
            "remote_java_tools": "remote_java_tools",
            "remote_java_tools_linux": "remote_java_tools_linux",
            "remote_java_tools_windows": "remote_java_tools_windows",
            "remote_java_tools_darwin_x86_64": "remote_java_tools_darwin_x86_64",
            "remote_java_tools_darwin_arm64": "remote_java_tools_darwin_arm64"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_tools//tools/sh:sh_configure.bzl",
          "extensionName": "sh_configure_extension",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 36,
            "column": 39
          },
          "imports": {
            "local_config_sh": "local_config_sh"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_tools//tools/test:extensions.bzl",
          "extensionName": "remote_coverage_tools_extension",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 40,
            "column": 48
          },
          "imports": {
            "remote_coverage_tools": "remote_coverage_tools"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_tools//tools/android:android_extensions.bzl",
          "extensionName": "remote_android_tools_extensions",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 43,
            "column": 42
          },
          "imports": {
            "android_gmaven_r8": "android_gmaven_r8",
            "android_tools": "android_tools"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@buildozer//:buildozer_binary.bzl",
          "extensionName": "buildozer_binary",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 47,
            "column": 33
          },
          "imports": {
            "buildozer_binary": "buildozer_binary"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "rules_cc": "rules_cc@0.0.9",
        "rules_java": "rules_java@7.4.0",
        "rules_license": "rules_license@1.0.0",
        "rules_proto": "rules_proto@6.0.2",
        "rules_python": "rules_python@0.38.0",
        "buildozer": "buildozer@6.4.0.2",
        "platforms": "platforms@0.0.10",
        "com_google_protobuf": "protobuf@27.1",
        "zlib": "zlib@1.3.1.bcr.1",
        "build_bazel_apple_support": "apple_support@1.15.1",
        "local_config_platform": "local_config_platform@_"
      }
    },
    "local_config_platform@_": {
      "name": "local_config_platform",
      "version": "",
      "key": "local_config_platform@_",
      "repoName": "local_config_platform",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "platforms": "platforms@0.0.10",
        "bazel_tools": "bazel_tools@_"
      }
    },
    "bazel_features@1.9.1": {
      "name": "bazel_features",
      "version": "1.9.1",
      "key": "bazel_features@1.9.1",
      "repoName": "bazel_features",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@bazel_features//private:extensions.bzl",
          "extensionName": "version_extension",
          "usingModule": "bazel_features@1.9.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/bazel_features/1.9.1/MODULE.bazel",
            "line": 15,
            "column": 24
          },
          "imports": {
            "bazel_features_globals": "bazel_features_globals",
            "bazel_features_version": "bazel_features_version"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.7.1",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/bazel-contrib/bazel_features/releases/download/v1.9.1/bazel_features-v1.9.1.tar.gz"
          ],
          "integrity": "sha256-13h9oomn+0lzUiEa0gDsn2mIIqngdXpJdv2fcT/zcrM=",
          "strip_prefix": "bazel_features-1.9.1",
          "remote_patches": {
            "https://bcr.bazel.build/modules/bazel_features/1.9.1/patches/module_dot_bazel_version.patch": "sha256-a2ofwS5r2Qq+WxzVa7sLbRXhfT3JoYxSlUVQH/nL454="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "bazel_skylib@1.7.1": {
      "name": "bazel_skylib",
      "version": "1.7.1",
      "key": "bazel_skylib@1.7.1",
      "repoName": "bazel_skylib",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "//toolchains/unittest:cmd_toolchain",
        "//toolchains/unittest:bash_toolchain"
      ],
      "extensionUsages": [],
      "deps": {
        "platforms": "platforms@0.0.10",
        "rules_license": "rules_license@1.0.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/bazelbuild/bazel-skylib/releases/download/1.7.1/bazel-skylib-1.7.1.tar.gz"
          ],
          "integrity": "sha256-vCg8381SalLDIBJ5zaS8KYZS76iYsQtNsIN9xRZSdW8=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "protobuf@27.1": {
      "name": "protobuf",
      "version": "27.1",
      "key": "protobuf@27.1",
      "repoName": "com_google_protobuf",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "com_google_absl": "abseil-cpp@20240116.2",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "jsoncpp": "jsoncpp@1.9.5",
        "rules_cc": "rules_cc@0.0.9",
        "rules_java": "rules_java@7.4.0",
        "rules_jvm_external": "rules_jvm_external@6.0",
        "rules_pkg": "rules_pkg@0.7.0",
        "rules_python": "rules_python@0.38.0",
        "platforms": "platforms@0.0.10",
        "zlib": "zlib@1.3.1.bcr.1",
        "rules_proto": "rules_proto@6.0.2",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/protocolbuffers/protobuf/releases/download/v27.1/protobuf-27.1.zip"
          ],
          "integrity": "sha256-fX8t3Mw348HF3+Za1p2Zkj2P6Evqxo7ZzexImQnE2NM=",
          "strip_prefix": "protobuf-27.1",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "rules_license@1.0.0": {
      "name": "rules_license",
      "version": "1.0.0",
      "key": "rules_license@1.0.0",
      "repoName": "rules_license",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/bazelbuild/rules_license/releases/download/1.0.0/rules_license-1.0.0.tar.gz"
          ],
          "integrity": "sha256-JtQCH2iY4juC75UweDid1JrCtWGKxWSt5O+HzO0Uezg=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "googletest@1.14.0.bcr.1": {
      "name": "googletest",
      "version": "1.14.0.bcr.1",
      "key": "googletest@1.14.0.bcr.1",
      "repoName": "googletest",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "com_google_absl": "abseil-cpp@20240116.2",
        "platforms": "platforms@0.0.10",
        "rules_cc": "rules_cc@0.0.9",
        "com_googlesource_code_re2": "re2@2023-09-01",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/google/googletest/archive/refs/tags/v1.14.0.tar.gz"
          ],
          "integrity": "sha256-itWYxzrXluDYKAsILOvYKmMNc+c808cAV5OKZQG7pdc=",
          "strip_prefix": "googletest-1.14.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/googletest/1.14.0.bcr.1/patches/module_dot_bazel.patch": "sha256-jijctisPYOzP4X4cl0K7neRh/kqJB+yODNHf8V8heCE="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "platforms@0.0.10": {
      "name": "platforms",
      "version": "0.0.10",
      "key": "platforms@0.0.10",
      "repoName": "platforms",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@platforms//host:extension.bzl",
          "extensionName": "host_platform",
          "usingModule": "platforms@0.0.10",
          "location": {
            "file": "https://bcr.bazel.build/modules/platforms/0.0.10/MODULE.bazel",
            "line": 9,
            "column": 30
          },
          "imports": {
            "host_platform": "host_platform"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "rules_license": "rules_license@1.0.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/bazelbuild/platforms/releases/download/0.0.10/platforms-0.0.10.tar.gz"
          ],
          "integrity": "sha256-IY7+juc20mo1cmY7N0olPAErcW2K8MB+hC6C8jigp+4=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "rules_cc@0.0.9": {
      "name": "rules_cc",
      "version": "0.0.9",
      "key": "rules_cc@0.0.9",
      "repoName": "rules_cc",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@local_config_cc_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@bazel_tools//tools/cpp:cc_configure.bzl",
          "extensionName": "cc_configure_extension",
          "usingModule": "rules_cc@0.0.9",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_cc/0.0.9/MODULE.bazel",
            "line": 9,
            "column": 29
          },
          "imports": {
            "local_config_cc_toolchains": "local_config_cc_toolchains"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "platforms": "platforms@0.0.10",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/bazelbuild/rules_cc/releases/download/0.0.9/rules_cc-0.0.9.tar.gz"
          ],
          "integrity": "sha256-IDeHW5pEVtzkp50RKorohbvEqtlo5lh9ym5k86CQDN8=",
          "strip_prefix": "rules_cc-0.0.9",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_cc/0.0.9/patches/module_dot_bazel_version.patch": "sha256-mM+qzOI0SgAdaJBlWOSMwMPKpaA9b7R37Hj/tp5bb4g="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "stardoc@0.6.2": {
      "name": "stardoc",
      "version": "0.6.2",
      "key": "stardoc@0.6.2",
      "repoName": "stardoc",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_jvm_external//:extensions.bzl",
          "extensionName": "maven",
          "usingModule": "stardoc@0.6.2",
          "location": {
            "file": "https://bcr.bazel.build/modules/stardoc/0.6.2/MODULE.bazel",
            "line": 22,
            "column": 22
          },
          "imports": {
            "stardoc_maven": "stardoc_maven"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "install",
              "attributeValues": {
                "name": "stardoc_maven",
                "artifacts": [
                  "com.beust:jcommander:1.82",
                  "com.google.escapevelocity:escapevelocity:1.1",
                  "com.google.guava:guava:31.1-jre",
                  "com.google.truth:truth:1.1.3",
                  "junit:junit:4.13.2"
                ],
                "fail_if_repin_required": true,
                "lock_file": "//:maven_install.json",
                "repositories": [
                  "https://repo1.maven.org/maven2"
                ],
                "strict_visibility": true
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/stardoc/0.6.2/MODULE.bazel",
                "line": 23,
                "column": 14
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.7.1",
        "rules_java": "rules_java@7.4.0",
        "rules_jvm_external": "rules_jvm_external@6.0",
        "rules_license": "rules_license@1.0.0",
        "com_google_protobuf": "protobuf@27.1",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/bazelbuild/stardoc/releases/download/0.6.2/stardoc-0.6.2.tar.gz"
          ],
          "integrity": "sha256-Yr0uYCFrem/sOseTQaogHglWR358j2zMKG8nmtHZZDI=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "grpc@1.65.0": {
      "name": "grpc",
      "version": "1.65.0",
      "key": "grpc@1.65.0",
      "repoName": "com_github_grpc_grpc",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@com_github_grpc_grpc//bazel:grpc_deps.bzl",
          "extensionName": "grpc_repo_deps_ext",
          "usingModule": "grpc@1.65.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/grpc/1.65.0/MODULE.bazel",
            "line": 29,
            "column": 35
          },
          "imports": {
            "com_envoyproxy_protoc_gen_validate": "com_envoyproxy_protoc_gen_validate",
            "com_github_cncf_udpa": "com_github_cncf_udpa",
            "com_github_cncf_xds": "com_github_cncf_xds",
            "envoy_api": "envoy_api",
            "google_cloud_cpp": "google_cloud_cpp",
            "io_opencensus_cpp": "io_opencensus_cpp"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@com_google_googleapis//:extensions.bzl",
          "extensionName": "switched_rules",
          "usingModule": "grpc@1.65.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/grpc/1.65.0/MODULE.bazel",
            "line": 40,
            "column": 31
          },
          "imports": {
            "com_google_googleapis_imports": "com_google_googleapis_imports"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "use_languages",
              "attributeValues": {
                "cc": true,
                "grpc": true,
                "python": true
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc/1.65.0/MODULE.bazel",
                "line": 41,
                "column": 29
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_python//python/extensions:python.bzl",
          "extensionName": "python",
          "usingModule": "grpc@1.65.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/grpc/1.65.0/MODULE.bazel",
            "line": 58,
            "column": 23
          },
          "imports": {},
          "devImports": [],
          "tags": [
            {
              "tagName": "toolchain",
              "attributeValues": {
                "is_default": false,
                "python_version": "3.8"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc/1.65.0/MODULE.bazel",
                "line": 61,
                "column": 21
              }
            },
            {
              "tagName": "toolchain",
              "attributeValues": {
                "is_default": false,
                "python_version": "3.9"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc/1.65.0/MODULE.bazel",
                "line": 61,
                "column": 21
              }
            },
            {
              "tagName": "toolchain",
              "attributeValues": {
                "is_default": false,
                "python_version": "3.10"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc/1.65.0/MODULE.bazel",
                "line": 61,
                "column": 21
              }
            },
            {
              "tagName": "toolchain",
              "attributeValues": {
                "is_default": false,
                "python_version": "3.11"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc/1.65.0/MODULE.bazel",
                "line": 61,
                "column": 21
              }
            },
            {
              "tagName": "toolchain",
              "attributeValues": {
                "is_default": true,
                "python_version": "3.12"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc/1.65.0/MODULE.bazel",
                "line": 61,
                "column": 21
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_python//python/extensions:pip.bzl",
          "extensionName": "pip",
          "usingModule": "grpc@1.65.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/grpc/1.65.0/MODULE.bazel",
            "line": 68,
            "column": 20
          },
          "imports": {
            "grpc_python_dependencies": "grpc_python_dependencies"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "parse",
              "attributeValues": {
                "hub_name": "grpc_python_dependencies",
                "python_version": "3.8",
                "requirements_lock": "//:requirements.bazel.txt"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc/1.65.0/MODULE.bazel",
                "line": 71,
                "column": 14
              }
            },
            {
              "tagName": "parse",
              "attributeValues": {
                "hub_name": "grpc_python_dependencies",
                "python_version": "3.9",
                "requirements_lock": "//:requirements.bazel.txt"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc/1.65.0/MODULE.bazel",
                "line": 71,
                "column": 14
              }
            },
            {
              "tagName": "parse",
              "attributeValues": {
                "hub_name": "grpc_python_dependencies",
                "python_version": "3.10",
                "requirements_lock": "//:requirements.bazel.txt"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc/1.65.0/MODULE.bazel",
                "line": 71,
                "column": 14
              }
            },
            {
              "tagName": "parse",
              "attributeValues": {
                "hub_name": "grpc_python_dependencies",
                "python_version": "3.11",
                "requirements_lock": "//:requirements.bazel.txt"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc/1.65.0/MODULE.bazel",
                "line": 71,
                "column": 14
              }
            },
            {
              "tagName": "parse",
              "attributeValues": {
                "hub_name": "grpc_python_dependencies",
                "python_version": "3.12",
                "requirements_lock": "//:requirements.bazel.txt"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc/1.65.0/MODULE.bazel",
                "line": 71,
                "column": 14
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@com_github_grpc_grpc//bazel:grpc_python_deps.bzl",
          "extensionName": "grpc_python_deps_ext",
          "usingModule": "grpc@1.65.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/grpc/1.65.0/MODULE.bazel",
            "line": 81,
            "column": 37
          },
          "imports": {
            "cython": "cython"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "com_google_absl": "abseil-cpp@20240116.2",
        "build_bazel_apple_support": "apple_support@1.15.1",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "boringssl": "boringssl@0.0.0-20230215-5c22014",
        "com_github_cares_cares": "c-ares@1.15.0",
        "bazel_gazelle": "gazelle@0.39.1",
        "com_github_google_benchmark": "google_benchmark@1.8.4",
        "com_google_googleapis": "googleapis@0.0.0-20240326-1c8d509c5",
        "com_google_googletest": "googletest@1.14.0.bcr.1",
        "io_opentelemetry_cpp": "opentelemetry-cpp@1.14.2",
        "platforms": "platforms@0.0.10",
        "com_github_jupp0r_prometheus_cpp": "prometheus-cpp@1.2.4",
        "com_google_protobuf": "protobuf@27.1",
        "com_googlesource_code_re2": "re2@2023-09-01",
        "build_bazel_rules_apple": "rules_apple@3.5.1",
        "rules_cc": "rules_cc@0.0.9",
        "io_bazel_rules_go": "rules_go@0.50.1",
        "rules_java": "rules_java@7.4.0",
        "rules_proto": "rules_proto@6.0.2",
        "zlib": "zlib@1.3.1.bcr.1",
        "rules_python": "rules_python@0.38.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/grpc/grpc/archive/refs/tags/v1.65.0.tar.gz"
          ],
          "integrity": "sha256-68Os/ecM+uP08EuNu3IllUDLHcQnvjYlafvCYH2r/jk=",
          "strip_prefix": "grpc-1.65.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/grpc/1.65.0/patches/add_module_bazel.patch": "sha256-MASGzFiPj53S1c6CgHyYuLD0XXklG95eABIZLhdZGk8=",
            "https://bcr.bazel.build/modules/grpc/1.65.0/patches/adopt_bzlmod.patch": "sha256-xj3GrXJKe+M3L/Jukz8a4eRTcnSuKIIwh8BnyTomNRw=",
            "https://bcr.bazel.build/modules/grpc/1.65.0/patches/disable-layering-check.patch": "sha256-v3IG7eZiEgWJ7hoaE1zRvXdSEjxbfPFIEIZrTEwt4IU="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "rules_proto_grpc@5.0.0": {
      "name": "rules_proto_grpc",
      "version": "5.0.0",
      "key": "rules_proto_grpc@5.0.0",
      "repoName": "rules_proto_grpc",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.7.1",
        "rules_cc": "rules_cc@0.0.9",
        "rules_proto": "rules_proto@6.0.2",
        "toolchains_protoc": "toolchains_protoc@0.3.1",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/rules-proto-grpc/rules_proto_grpc/releases/download/5.0.0/rules_proto_grpc-5.0.0.tar.gz"
          ],
          "integrity": "sha256-n8U6+Z+oTA+1mGzNOc8qTST6OAcY78tAenedEIxNoig=",
          "strip_prefix": "rules_proto_grpc-5.0.0",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "rules_java@7.4.0": {
      "name": "rules_java",
      "version": "7.4.0",
      "key": "rules_java@7.4.0",
      "repoName": "rules_java",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "//toolchains:all",
        "@local_jdk//:runtime_toolchain_definition",
        "@local_jdk//:bootstrap_runtime_toolchain_definition",
        "@remotejdk11_linux_toolchain_config_repo//:all",
        "@remotejdk11_linux_aarch64_toolchain_config_repo//:all",
        "@remotejdk11_linux_ppc64le_toolchain_config_repo//:all",
        "@remotejdk11_linux_s390x_toolchain_config_repo//:all",
        "@remotejdk11_macos_toolchain_config_repo//:all",
        "@remotejdk11_macos_aarch64_toolchain_config_repo//:all",
        "@remotejdk11_win_toolchain_config_repo//:all",
        "@remotejdk11_win_arm64_toolchain_config_repo//:all",
        "@remotejdk17_linux_toolchain_config_repo//:all",
        "@remotejdk17_linux_aarch64_toolchain_config_repo//:all",
        "@remotejdk17_linux_ppc64le_toolchain_config_repo//:all",
        "@remotejdk17_linux_s390x_toolchain_config_repo//:all",
        "@remotejdk17_macos_toolchain_config_repo//:all",
        "@remotejdk17_macos_aarch64_toolchain_config_repo//:all",
        "@remotejdk17_win_toolchain_config_repo//:all",
        "@remotejdk17_win_arm64_toolchain_config_repo//:all",
        "@remotejdk21_linux_toolchain_config_repo//:all",
        "@remotejdk21_linux_aarch64_toolchain_config_repo//:all",
        "@remotejdk21_macos_toolchain_config_repo//:all",
        "@remotejdk21_macos_aarch64_toolchain_config_repo//:all",
        "@remotejdk21_win_toolchain_config_repo//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_java//java:extensions.bzl",
          "extensionName": "toolchains",
          "usingModule": "rules_java@7.4.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_java/7.4.0/MODULE.bazel",
            "line": 19,
            "column": 27
          },
          "imports": {
            "remote_java_tools": "remote_java_tools",
            "remote_java_tools_linux": "remote_java_tools_linux",
            "remote_java_tools_windows": "remote_java_tools_windows",
            "remote_java_tools_darwin_x86_64": "remote_java_tools_darwin_x86_64",
            "remote_java_tools_darwin_arm64": "remote_java_tools_darwin_arm64",
            "local_jdk": "local_jdk",
            "remotejdk11_linux_toolchain_config_repo": "remotejdk11_linux_toolchain_config_repo",
            "remotejdk11_linux_aarch64_toolchain_config_repo": "remotejdk11_linux_aarch64_toolchain_config_repo",
            "remotejdk11_linux_ppc64le_toolchain_config_repo": "remotejdk11_linux_ppc64le_toolchain_config_repo",
            "remotejdk11_linux_s390x_toolchain_config_repo": "remotejdk11_linux_s390x_toolchain_config_repo",
            "remotejdk11_macos_toolchain_config_repo": "remotejdk11_macos_toolchain_config_repo",
            "remotejdk11_macos_aarch64_toolchain_config_repo": "remotejdk11_macos_aarch64_toolchain_config_repo",
            "remotejdk11_win_toolchain_config_repo": "remotejdk11_win_toolchain_config_repo",
            "remotejdk11_win_arm64_toolchain_config_repo": "remotejdk11_win_arm64_toolchain_config_repo",
            "remotejdk17_linux_toolchain_config_repo": "remotejdk17_linux_toolchain_config_repo",
            "remotejdk17_linux_aarch64_toolchain_config_repo": "remotejdk17_linux_aarch64_toolchain_config_repo",
            "remotejdk17_linux_ppc64le_toolchain_config_repo": "remotejdk17_linux_ppc64le_toolchain_config_repo",
            "remotejdk17_linux_s390x_toolchain_config_repo": "remotejdk17_linux_s390x_toolchain_config_repo",
            "remotejdk17_macos_toolchain_config_repo": "remotejdk17_macos_toolchain_config_repo",
            "remotejdk17_macos_aarch64_toolchain_config_repo": "remotejdk17_macos_aarch64_toolchain_config_repo",
            "remotejdk17_win_toolchain_config_repo": "remotejdk17_win_toolchain_config_repo",
            "remotejdk17_win_arm64_toolchain_config_repo": "remotejdk17_win_arm64_toolchain_config_repo",
            "remotejdk21_linux_toolchain_config_repo": "remotejdk21_linux_toolchain_config_repo",
            "remotejdk21_linux_aarch64_toolchain_config_repo": "remotejdk21_linux_aarch64_toolchain_config_repo",
            "remotejdk21_macos_toolchain_config_repo": "remotejdk21_macos_toolchain_config_repo",
            "remotejdk21_macos_aarch64_toolchain_config_repo": "remotejdk21_macos_aarch64_toolchain_config_repo",
            "remotejdk21_win_toolchain_config_repo": "remotejdk21_win_toolchain_config_repo"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "platforms": "platforms@0.0.10",
        "rules_cc": "rules_cc@0.0.9",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "rules_proto": "rules_proto@6.0.2",
        "rules_license": "rules_license@1.0.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/bazelbuild/rules_java/releases/download/7.4.0/rules_java-7.4.0.tar.gz"
          ],
          "integrity": "sha256-l27wi0nJKXQfIBeQ5Z44B8cq2B9CjIvJU82+/1/tFes=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "buildozer@6.4.0.2": {
      "name": "buildozer",
      "version": "6.4.0.2",
      "key": "buildozer@6.4.0.2",
      "repoName": "buildozer",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@buildozer//:buildozer_binary.bzl",
          "extensionName": "buildozer_binary",
          "usingModule": "buildozer@6.4.0.2",
          "location": {
            "file": "https://bcr.bazel.build/modules/buildozer/6.4.0.2/MODULE.bazel",
            "line": 7,
            "column": 33
          },
          "imports": {
            "buildozer_binary": "buildozer_binary"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "buildozer",
              "attributeValues": {
                "sha256": {
                  "darwin-amd64": "d29e347ecd6b5673d72cb1a8de05bf1b06178dd229ff5eb67fad5100c840cc8e",
                  "darwin-arm64": "9b9e71bdbec5e7223871e913b65d12f6d8fa026684daf991f00e52ed36a6978d",
                  "linux-amd64": "8dfd6345da4e9042daa738d7fdf34f699c5dfce4632f7207956fceedd8494119",
                  "linux-arm64": "6559558fded658c8fa7432a9d011f7c4dcbac6b738feae73d2d5c352e5f605fa",
                  "windows-amd64": "e7f05bf847f7c3689dd28926460ce6e1097ae97380ac8e6ae7147b7b706ba19b"
                },
                "version": "6.4.0"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/buildozer/6.4.0.2/MODULE.bazel",
                "line": 8,
                "column": 27
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/fmeum/buildozer/releases/download/v6.4.0.2/buildozer-v6.4.0.2.tar.gz"
          ],
          "integrity": "sha256-k7tFKQMR2AygxpmZfH0yEPnQmF3efFgD9rBPkj+Yz/8=",
          "strip_prefix": "buildozer-6.4.0.2",
          "remote_patches": {
            "https://bcr.bazel.build/modules/buildozer/6.4.0.2/patches/module_dot_bazel_version.patch": "sha256-gKANF2HMilj7bWmuXs4lbBIAAansuWC4IhWGB/CerjU="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "zlib@1.3.1.bcr.1": {
      "name": "zlib",
      "version": "1.3.1.bcr.1",
      "key": "zlib@1.3.1.bcr.1",
      "repoName": "zlib",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "platforms": "platforms@0.0.10",
        "rules_cc": "rules_cc@0.0.9",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/madler/zlib/releases/download/v1.3.1/zlib-1.3.1.tar.gz"
          ],
          "integrity": "sha256-mpOyt9/ax3zrpaVYpYDnRmfdb+3kWFuR7vtg8Dty3yM=",
          "strip_prefix": "zlib-1.3.1",
          "remote_patches": {
            "https://bcr.bazel.build/modules/zlib/1.3.1.bcr.1/patches/add_build_file.patch": "sha256-0MCgNjvE1kGfdKTdDt4PEBHJMIwtDYHB7h69zhxDSNI=",
            "https://bcr.bazel.build/modules/zlib/1.3.1.bcr.1/patches/add_module_file.patch": "sha256-euR5cSrSZnUKPOIJKRu3BY/Dphe1+ekPC6OWaAQfDjQ="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "apple_support@1.15.1": {
      "name": "apple_support",
      "version": "1.15.1",
      "key": "apple_support@1.15.1",
      "repoName": "build_bazel_apple_support",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@local_config_apple_cc_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@build_bazel_apple_support//crosstool:setup.bzl",
          "extensionName": "apple_cc_configure_extension",
          "usingModule": "apple_support@1.15.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/apple_support/1.15.1/MODULE.bazel",
            "line": 19,
            "column": 35
          },
          "imports": {
            "local_config_apple_cc": "local_config_apple_cc",
            "local_config_apple_cc_toolchains": "local_config_apple_cc_toolchains"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.7.1",
        "platforms": "platforms@0.0.10",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/bazelbuild/apple_support/releases/download/1.15.1/apple_support.1.15.1.tar.gz"
          ],
          "integrity": "sha256-xLsrc2fEhDgjAK7nW+WYuS+EeJb7MbvSLzojRq32aoA=",
          "strip_prefix": "",
          "remote_patches": {
            "https://bcr.bazel.build/modules/apple_support/1.15.1/patches/module_dot_bazel_version.patch": "sha256-FvMGp1f0FT1IT38LFbWGUqe5fukTvEyug2Puhimca74="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "jsoncpp@1.9.5": {
      "name": "jsoncpp",
      "version": "1.9.5",
      "key": "jsoncpp@1.9.5",
      "repoName": "jsoncpp",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/open-source-parsers/jsoncpp/archive/refs/tags/1.9.5.tar.gz"
          ],
          "integrity": "sha256-9AmFblkgwY0ML7hSduJO5gfSoJtefV8KNxNokDwnXaI=",
          "strip_prefix": "jsoncpp-1.9.5",
          "remote_patches": {
            "https://bcr.bazel.build/modules/jsoncpp/1.9.5/patches/build_dot_bazel.patch": "sha256-Vj8diXSWps8I8h5cdEqBDYmKBA2ulvWxMZBEQlIgcpU=",
            "https://bcr.bazel.build/modules/jsoncpp/1.9.5/patches/module_dot_bazel.patch": "sha256-7RC7fS8N11vcyeDEaUZ05yBqr0YY7OzuzqaWz5W2XDo="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "rules_jvm_external@6.0": {
      "name": "rules_jvm_external",
      "version": "6.0",
      "key": "rules_jvm_external@6.0",
      "repoName": "rules_jvm_external",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@bazel_tools//tools/android:android_extensions.bzl",
          "extensionName": "remote_android_tools_extensions",
          "usingModule": "rules_jvm_external@6.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_jvm_external/6.0/MODULE.bazel",
            "line": 29,
            "column": 42
          },
          "imports": {
            "android_gmaven_r8": "android_gmaven_r8",
            "android_tools": "android_tools"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_jvm_external//:extensions.bzl",
          "extensionName": "maven",
          "usingModule": "rules_jvm_external@6.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_jvm_external/6.0/MODULE.bazel",
            "line": 33,
            "column": 22
          },
          "imports": {
            "maven_jar_migrator": "maven_jar_migrator",
            "rules_jvm_external_deps": "rules_jvm_external_deps",
            "unpinned_rules_jvm_external_deps": "unpinned_rules_jvm_external_deps"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "install",
              "attributeValues": {
                "name": "rules_jvm_external_deps",
                "artifacts": [
                  "com.google.auth:google-auth-library-credentials:1.19.0",
                  "com.google.auth:google-auth-library-oauth2-http:1.19.0",
                  "com.google.cloud:google-cloud-core:2.22.0",
                  "com.google.cloud:google-cloud-storage:2.26.1",
                  "com.google.code.gson:gson:2.10.1",
                  "com.google.googlejavaformat:google-java-format:1.17.0",
                  "com.google.guava:guava:32.1.2-jre",
                  "org.apache.maven:maven-artifact:3.9.4",
                  "software.amazon.awssdk:s3:2.20.128"
                ],
                "lock_file": "//:rules_jvm_external_deps_install.json"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_jvm_external/6.0/MODULE.bazel",
                "line": 35,
                "column": 14
              }
            },
            {
              "tagName": "install",
              "attributeValues": {
                "name": "maven_jar_migrator",
                "artifacts": [
                  "com.google.guava:guava:28.0-jre"
                ]
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_jvm_external/6.0/MODULE.bazel",
                "line": 51,
                "column": 14
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "//:MODULE.bazel",
          "extensionName": "_repo_rules",
          "usingModule": "rules_jvm_external@6.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_jvm_external/6.0/MODULE.bazel",
            "line": 0,
            "column": 0
          },
          "imports": {
            "coursier_cli": "coursier_cli",
            "buildifier-linux-arm64": "buildifier-linux-arm64",
            "buildifier-linux-x86_64": "buildifier-linux-x86_64",
            "buildifier-macos-arm64": "buildifier-macos-arm64",
            "buildifier-macos-x86_64": "buildifier-macos-x86_64",
            "com.google.ar.sceneform_rendering": "com.google.ar.sceneform_rendering",
            "hamcrest_core_for_test": "hamcrest_core_for_test",
            "hamcrest_core_srcs_for_test": "hamcrest_core_srcs_for_test",
            "gson_for_test": "gson_for_test",
            "junit_platform_commons_for_test": "junit_platform_commons_for_test",
            "google_api_services_compute_javadoc_for_test": "google_api_services_compute_javadoc_for_test"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
              "attributeValues": {
                "sha256": "2b78bfdd3ef13fd1f42f158de0f029d7cbb1f4f652d51773445cf2b6f7918a87",
                "urls": [
                  "https://github.com/coursier/coursier/releases/download/v2.1.8/coursier.jar"
                ],
                "name": "coursier_cli"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_jvm_external/6.0/MODULE.bazel",
                "line": 78,
                "column": 10
              }
            },
            {
              "tagName": "@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
              "attributeValues": {
                "sha256": "917d599dbb040e63ae7a7e1adb710d2057811902fdc9e35cce925ebfd966eeb8",
                "urls": [
                  "https://github.com/bazelbuild/buildtools/releases/download/5.1.0/buildifier-linux-arm64"
                ],
                "name": "buildifier-linux-arm64"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_jvm_external/6.0/MODULE.bazel",
                "line": 84,
                "column": 10
              }
            },
            {
              "tagName": "@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
              "attributeValues": {
                "sha256": "52bf6b102cb4f88464e197caac06d69793fa2b05f5ad50a7e7bf6fbd656648a3",
                "urls": [
                  "https://github.com/bazelbuild/buildtools/releases/download/5.1.0/buildifier-linux-amd64"
                ],
                "name": "buildifier-linux-x86_64"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_jvm_external/6.0/MODULE.bazel",
                "line": 90,
                "column": 10
              }
            },
            {
              "tagName": "@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
              "attributeValues": {
                "sha256": "745feb5ea96cb6ff39a76b2821c57591fd70b528325562486d47b5d08900e2e4",
                "urls": [
                  "https://github.com/bazelbuild/buildtools/releases/download/5.1.0/buildifier-darwin-arm64"
                ],
                "name": "buildifier-macos-arm64"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_jvm_external/6.0/MODULE.bazel",
                "line": 96,
                "column": 10
              }
            },
            {
              "tagName": "@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
              "attributeValues": {
                "sha256": "c9378d9f4293fc38ec54a08fbc74e7a9d28914dae6891334401e59f38f6e65dc",
                "urls": [
                  "https://github.com/bazelbuild/buildtools/releases/download/5.1.0/buildifier-darwin-amd64"
                ],
                "name": "buildifier-macos-x86_64"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_jvm_external/6.0/MODULE.bazel",
                "line": 102,
                "column": 10
              }
            },
            {
              "tagName": "@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
              "attributeValues": {
                "downloaded_file_path": "rendering-1.10.0.aar",
                "sha256": "d2f6cd1d54eee0d5557518d1edcf77a3ba37494ae94f9bb862e570ee426a3431",
                "urls": [
                  "https://dl.google.com/android/maven2/com/google/ar/sceneform/rendering/1.10.0/rendering-1.10.0.aar"
                ],
                "name": "com.google.ar.sceneform_rendering"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_jvm_external/6.0/MODULE.bazel",
                "line": 684,
                "column": 10
              }
            },
            {
              "tagName": "@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
              "attributeValues": {
                "downloaded_file_path": "hamcrest-core-1.3.jar",
                "sha256": "66fdef91e9739348df7a096aa384a5685f4e875584cce89386a7a47251c4d8e9",
                "urls": [
                  "https://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar"
                ],
                "name": "hamcrest_core_for_test"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_jvm_external/6.0/MODULE.bazel",
                "line": 693,
                "column": 10
              }
            },
            {
              "tagName": "@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
              "attributeValues": {
                "downloaded_file_path": "hamcrest-core-1.3-sources.jar",
                "sha256": "e223d2d8fbafd66057a8848cc94222d63c3cedd652cc48eddc0ab5c39c0f84df",
                "urls": [
                  "https://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3-sources.jar"
                ],
                "name": "hamcrest_core_srcs_for_test"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_jvm_external/6.0/MODULE.bazel",
                "line": 702,
                "column": 10
              }
            },
            {
              "tagName": "@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
              "attributeValues": {
                "downloaded_file_path": "gson-2.9.0.jar",
                "sha256": "c96d60551331a196dac54b745aa642cd078ef89b6f267146b705f2c2cbef052d",
                "urls": [
                  "https://repo1.maven.org/maven2/com/google/code/gson/gson/2.9.0/gson-2.9.0.jar"
                ],
                "name": "gson_for_test"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_jvm_external/6.0/MODULE.bazel",
                "line": 711,
                "column": 10
              }
            },
            {
              "tagName": "@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
              "attributeValues": {
                "downloaded_file_path": "junit-platform-commons-1.8.2.jar",
                "sha256": "d2e015fca7130e79af2f4608dc54415e4b10b592d77333decb4b1a274c185050",
                "urls": [
                  "https://repo1.maven.org/maven2/org/junit/platform/junit-platform-commons/1.8.2/junit-platform-commons-1.8.2.jar"
                ],
                "name": "junit_platform_commons_for_test"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_jvm_external/6.0/MODULE.bazel",
                "line": 720,
                "column": 10
              }
            },
            {
              "tagName": "@bazel_tools//tools/build_defs/repo:http.bzl%http_file",
              "attributeValues": {
                "downloaded_file_path": "google-api-services-compute-v1-rev235-1.25.0-javadoc.jar",
                "sha256": "b03be5ee8effba3bfbaae53891a9c01d70e2e3bd82ad8889d78e641b22bd76c2",
                "urls": [
                  "https://repo1.maven.org/maven2/com/google/apis/google-api-services-compute/v1-rev235-1.25.0/google-api-services-compute-v1-rev235-1.25.0-javadoc.jar"
                ],
                "name": "google_api_services_compute_javadoc_for_test"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_jvm_external/6.0/MODULE.bazel",
                "line": 730,
                "column": 10
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.7.1",
        "platforms": "platforms@0.0.10",
        "rules_java": "rules_java@7.4.0",
        "rules_kotlin": "rules_kotlin@1.9.0",
        "io_bazel_stardoc": "stardoc@0.6.2",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/bazelbuild/rules_jvm_external/releases/download/6.0/rules_jvm_external-6.0.tar.gz"
          ],
          "integrity": "sha256-hf1rrVisdsw6J8jgUeQlX/nM2MkrqHlnDRlWIufAqbc=",
          "strip_prefix": "rules_jvm_external-6.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_jvm_external/6.0/patches/module_dot_bazel.patch": "sha256-+Ci4gFKoiHYV4zl1HFIS8JtdDSogzDh6neAEBNd+zLA="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "rules_pkg@0.7.0": {
      "name": "rules_pkg",
      "version": "0.7.0",
      "key": "rules_pkg@0.7.0",
      "repoName": "rules_pkg",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "rules_python": "rules_python@0.38.0",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "rules_license": "rules_license@1.0.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/bazelbuild/rules_pkg/releases/download/0.7.0/rules_pkg-0.7.0.tar.gz"
          ],
          "integrity": "sha256-iimOgydi7aGDBZfWT+fbWBeKqEzVkm121bdE1lWJQcI=",
          "strip_prefix": "",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_pkg/0.7.0/patches/module_dot_bazel.patch": "sha256-4OaEPZwYF6iC71ZTDg6MJ7LLqX7ZA0/kK4mT+4xKqiE="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "re2@2023-09-01": {
      "name": "re2",
      "version": "2023-09-01",
      "key": "re2@2023-09-01",
      "repoName": "re2",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@pybind11_bazel//:python_configure.bzl",
          "extensionName": "extension",
          "usingModule": "re2@2023-09-01",
          "location": {
            "file": "https://bcr.bazel.build/modules/re2/2023-09-01/MODULE.bazel",
            "line": 22,
            "column": 33
          },
          "imports": {
            "local_config_python": "local_config_python",
            "pybind11": "pybind11"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "toolchain",
              "attributeValues": {
                "python_version": "3"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/re2/2023-09-01/MODULE.bazel",
                "line": 23,
                "column": 27
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "platforms": "platforms@0.0.10",
        "rules_cc": "rules_cc@0.0.9",
        "com_google_absl": "abseil-cpp@20240116.2",
        "rules_python": "rules_python@0.38.0",
        "pybind11_bazel": "pybind11_bazel@2.13.6",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/google/re2/releases/download/2023-09-01/re2-2023-09-01.zip"
          ],
          "integrity": "sha256-IkuDUdxGM7EBLb2EdWTgYKRr5goioUY9S1uZP9S/Wcw=",
          "strip_prefix": "re2-2023-09-01",
          "remote_patches": {
            "https://bcr.bazel.build/modules/re2/2023-09-01/patches/module_dot_bazel.patch": "sha256-MUQkRNgPJ0lbYqOXoBu2m2vLH7IuKEbK/VWTw7WWrnA="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "boringssl@0.0.0-20230215-5c22014": {
      "name": "boringssl",
      "version": "0.0.0-20230215-5c22014",
      "key": "boringssl@0.0.0-20230215-5c22014",
      "repoName": "boringssl",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "rules_cc": "rules_cc@0.0.9",
        "platforms": "platforms@0.0.10",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/google/boringssl/archive/5c22014ca513807ed03c657e8ede076164663979.zip"
          ],
          "integrity": "sha256-hj/GcMRW8wkjdAwWOTBRMv37nRslujhaZ644Yu8SqK8=",
          "strip_prefix": "boringssl-5c22014ca513807ed03c657e8ede076164663979",
          "remote_patches": {
            "https://bcr.bazel.build/modules/boringssl/0.0.0-20230215-5c22014/patches/module_dot_bazel.patch": "sha256-TbAx9h+pBkDT3JmKw1bRchtNcLK1dnvsW1IlCkl/yd0="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "c-ares@1.15.0": {
      "name": "c-ares",
      "version": "1.15.0",
      "key": "c-ares@1.15.0",
      "repoName": "c-ares",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.7.1",
        "com_github_grpc_grpc": "grpc@1.65.0",
        "platforms": "platforms@0.0.10",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/c-ares/c-ares/releases/download/cares-1_15_0/c-ares-1.15.0.tar.gz"
          ],
          "integrity": "sha256-bNuXhx8pMFMMl963z1yPpL5aCwLHzqbnx2Z2cqOdaFI=",
          "strip_prefix": "c-ares-1.15.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/c-ares/1.15.0/patches/add_build_file.patch": "sha256-+SUCFxBIkR0GE9FRFPps/e6AnA9cQIGANBHK14UAKwQ=",
            "https://bcr.bazel.build/modules/c-ares/1.15.0/patches/module_dot_bazel.patch": "sha256-SVQeSrnvd7IishMhmg8S3PK6/6bbt1IqwVEqKDfdYgk="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "google_benchmark@1.8.4": {
      "name": "google_benchmark",
      "version": "1.8.4",
      "key": "google_benchmark@1.8.4",
      "repoName": "google_benchmark",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.7.1",
        "platforms": "platforms@0.0.10",
        "rules_foreign_cc": "rules_foreign_cc@0.10.1",
        "rules_cc": "rules_cc@0.0.9",
        "libpfm": "libpfm@4.11.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/google/benchmark/archive/refs/tags/v1.8.4.tar.gz"
          ],
          "integrity": "sha256-PnBZtrEfsbvijjPgJRk5jKlMGBiHTr7RjlBNxvcJvkU=",
          "strip_prefix": "benchmark-1.8.4",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "googleapis@0.0.0-20240326-1c8d509c5": {
      "name": "googleapis",
      "version": "0.0.0-20240326-1c8d509c5",
      "key": "googleapis@0.0.0-20240326-1c8d509c5",
      "repoName": "com_google_googleapis",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@com_google_googleapis//:extensions.bzl",
          "extensionName": "switched_rules",
          "usingModule": "googleapis@0.0.0-20240326-1c8d509c5",
          "location": {
            "file": "https://bcr.bazel.build/modules/googleapis/0.0.0-20240326-1c8d509c5/MODULE.bazel",
            "line": 14,
            "column": 31
          },
          "imports": {
            "com_google_googleapis_imports": "com_google_googleapis_imports"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "use_languages",
              "attributeValues": {
                "cc": true,
                "go": true,
                "grpc": true,
                "java": true,
                "python": true
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/googleapis/0.0.0-20240326-1c8d509c5/MODULE.bazel",
                "line": 17,
                "column": 29
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "com_github_grpc_grpc": "grpc@1.65.0",
        "io_grpc_grpc_java": "grpc-java@1.62.2",
        "com_google_protobuf": "protobuf@27.1",
        "io_bazel_rules_go": "rules_go@0.50.1",
        "rules_proto": "rules_proto@6.0.2",
        "rules_python": "rules_python@0.38.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/googleapis/googleapis/archive/1c8d509c574aeab7478be1bfd4f2e8f0931cfead.tar.gz"
          ],
          "integrity": "sha256-uFSuF925M8JJUw90PbjXjfgJBd+0JoElVWSh0ZId/Dw=",
          "strip_prefix": "googleapis-1c8d509c574aeab7478be1bfd4f2e8f0931cfead",
          "remote_patches": {
            "https://bcr.bazel.build/modules/googleapis/0.0.0-20240326-1c8d509c5/patches/add_module_bazel.patch": "sha256-fyl8LjxecJdTeeCNtpG4rfZMDiSOPTUi7HvJGDWvP1o="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "opentelemetry-cpp@1.14.2": {
      "name": "opentelemetry-cpp",
      "version": "1.14.2",
      "key": "opentelemetry-cpp@1.14.2",
      "repoName": "io_opentelemetry_cpp",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "com_google_absl": "abseil-cpp@20240116.2",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "curl": "curl@8.4.0",
        "com_github_grpc_grpc": "grpc@1.65.0",
        "github_nlohmann_json": "nlohmann_json@3.11.3",
        "com_github_opentelemetry_proto": "opentelemetry-proto@1.1.0",
        "com_github_opentracing": "opentracing-cpp@1.6.0",
        "platforms": "platforms@0.0.10",
        "com_github_jupp0r_prometheus_cpp": "prometheus-cpp@1.2.4",
        "com_google_protobuf": "protobuf@27.1",
        "rules_proto": "rules_proto@6.0.2",
        "upb": "upb@0.0.0-20230907-e7430e6",
        "zlib": "zlib@1.3.1.bcr.1",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/open-telemetry/opentelemetry-cpp/archive/refs/tags/v1.14.2.tar.gz"
          ],
          "integrity": "sha256-x+eAHJ9iKHUc253Uck0PBHd+1T9STIgo5zv0yfiU4L0=",
          "strip_prefix": "opentelemetry-cpp-1.14.2",
          "remote_patches": {
            "https://bcr.bazel.build/modules/opentelemetry-cpp/1.14.2/patches/0001-Add-MODULE.bazel.patch": "sha256-JAtjQwrqEgzpNN6oPz4n6Cm+i2uOh4Sm2XL3HBMCTkA="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "prometheus-cpp@1.2.4": {
      "name": "prometheus-cpp",
      "version": "1.2.4",
      "key": "prometheus-cpp@1.2.4",
      "repoName": "com_github_jupp0r_prometheus_cpp",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@com_github_jupp0r_prometheus_cpp//bazel:repositories.bzl",
          "extensionName": "data_deps_ext",
          "usingModule": "prometheus-cpp@1.2.4",
          "location": {
            "file": "https://bcr.bazel.build/modules/prometheus-cpp/1.2.4/MODULE.bazel",
            "line": 7,
            "column": 30
          },
          "imports": {
            "civetweb": "civetweb",
            "com_github_curl": "com_github_curl"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "boringssl": "boringssl@0.0.0-20230215-5c22014",
        "platforms": "platforms@0.0.10",
        "rules_cc": "rules_cc@0.0.9",
        "zlib": "zlib@1.3.1.bcr.1",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/jupp0r/prometheus-cpp/releases/download/v1.2.4/prometheus-cpp-with-submodules.tar.gz"
          ],
          "integrity": "sha256-DWhSKRBjw1hT6IgFxztS9zwMCLeMHnvE1Yj89ypxcus=",
          "strip_prefix": "prometheus-cpp-with-submodules",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "rules_apple@3.5.1": {
      "name": "rules_apple",
      "version": "3.5.1",
      "key": "rules_apple@3.5.1",
      "repoName": "build_bazel_rules_apple",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@build_bazel_rules_apple//apple:extensions.bzl",
          "extensionName": "non_module_deps",
          "usingModule": "rules_apple@3.5.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_apple/3.5.1/MODULE.bazel",
            "line": 21,
            "column": 32
          },
          "imports": {
            "xctestrunner": "xctestrunner"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@build_bazel_rules_apple//apple:apple.bzl",
          "extensionName": "provisioning_profile_repository_extension",
          "usingModule": "rules_apple@3.5.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_apple/3.5.1/MODULE.bazel",
            "line": 27,
            "column": 48
          },
          "imports": {
            "local_provisioning_profiles": "local_provisioning_profiles"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@build_bazel_apple_support//crosstool:setup.bzl",
          "extensionName": "apple_cc_configure_extension",
          "usingModule": "rules_apple@3.5.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_apple/3.5.1/MODULE.bazel",
            "line": 30,
            "column": 35
          },
          "imports": {
            "local_config_apple_cc": "local_config_apple_cc"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "build_bazel_apple_support": "apple_support@1.15.1",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "platforms": "platforms@0.0.10",
        "build_bazel_rules_swift": "rules_swift@1.18.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/bazelbuild/rules_apple/releases/download/3.5.1/rules_apple.3.5.1.tar.gz"
          ],
          "integrity": "sha256-tN+QjsFIaDaQIRgqsZHb0fQIMMmzAGUNXcOJ4LkmbI0=",
          "strip_prefix": "",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_apple/3.5.1/patches/module_dot_bazel_version.patch": "sha256-fFPrtyxXinpMnUGqn62tRa7Av4tD1iubJElxJ9dgzck="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "toolchains_protoc@0.3.1": {
      "name": "toolchains_protoc",
      "version": "0.3.1",
      "key": "toolchains_protoc@0.3.1",
      "repoName": "toolchains_protoc",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@toolchains_protoc_hub//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@toolchains_protoc//protoc:extensions.bzl",
          "extensionName": "protoc",
          "usingModule": "toolchains_protoc@0.3.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/toolchains_protoc/0.3.1/MODULE.bazel",
            "line": 14,
            "column": 23
          },
          "imports": {
            "com_google_protobuf": "com_google_protobuf",
            "toolchains_protoc_hub": "toolchains_protoc_hub"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "toolchain",
              "attributeValues": {
                "google_protobuf": "com_google_protobuf",
                "version": "LATEST"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/toolchains_protoc/0.3.1/MODULE.bazel",
                "line": 15,
                "column": 17
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_features": "bazel_features@1.9.1",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "rules_proto": "rules_proto@6.0.2",
        "platforms": "platforms@0.0.10",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/aspect-build/toolchains_protoc/releases/download/v0.3.1/toolchains_protoc-v0.3.1.tar.gz"
          ],
          "integrity": "sha256-OJj45iHKWzx7lDAMWuGQddW7KDSdbm9AdJCkZroeJUQ=",
          "strip_prefix": "toolchains_protoc-0.3.1",
          "remote_patches": {
            "https://bcr.bazel.build/modules/toolchains_protoc/0.3.1/patches/module_dot_bazel_version.patch": "sha256-pIE6TFgHbW8oclvLHEc4/+R5qTZDIqwD2yCDnlg6J2o="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "rules_kotlin@1.9.0": {
      "name": "rules_kotlin",
      "version": "1.9.0",
      "key": "rules_kotlin@1.9.0",
      "repoName": "rules_kotlin",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "//kotlin/internal:default_toolchain"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_kotlin//src/main/starlark/core/repositories:bzlmod_setup.bzl",
          "extensionName": "rules_kotlin_extensions",
          "usingModule": "rules_kotlin@1.9.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_kotlin/1.9.0/MODULE.bazel",
            "line": 14,
            "column": 40
          },
          "imports": {
            "buildkite_config": "buildkite_config",
            "com_github_google_ksp": "com_github_google_ksp",
            "com_github_jetbrains_kotlin": "com_github_jetbrains_kotlin",
            "com_github_pinterest_ktlint": "com_github_pinterest_ktlint",
            "kt_java_stub_template": "kt_java_stub_template",
            "rules_android": "rules_android"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_tools//tools/android:android_extensions.bzl",
          "extensionName": "remote_android_tools_extensions",
          "usingModule": "rules_kotlin@1.9.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_kotlin/1.9.0/MODULE.bazel",
            "line": 28,
            "column": 42
          },
          "imports": {
            "android_gmaven_r8": "android_gmaven_r8",
            "android_tools": "android_tools"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_jvm_external//:extensions.bzl",
          "extensionName": "maven",
          "usingModule": "rules_kotlin@1.9.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_kotlin/1.9.0/MODULE.bazel",
            "line": 37,
            "column": 22
          },
          "imports": {
            "kotlin_rules_maven": "kotlin_rules_maven"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "install",
              "attributeValues": {
                "name": "kotlin_rules_maven",
                "artifacts": [
                  "com.google.code.findbugs:jsr305:3.0.2",
                  "junit:junit:4.13-beta-3",
                  "com.google.protobuf:protobuf-java:3.6.0",
                  "com.google.protobuf:protobuf-java-util:3.6.0",
                  "com.google.guava:guava:27.1-jre",
                  "com.google.truth:truth:0.45",
                  "com.google.auto.service:auto-service:1.0.1",
                  "com.google.auto.service:auto-service-annotations:1.0.1",
                  "com.google.auto.value:auto-value:1.10.1",
                  "com.google.auto.value:auto-value-annotations:1.10.1",
                  "com.google.dagger:dagger:2.43.2",
                  "com.google.dagger:dagger-compiler:2.43.2",
                  "com.google.dagger:dagger-producers:2.43.2",
                  "javax.annotation:javax.annotation-api:1.3.2",
                  "javax.inject:javax.inject:1",
                  "org.pantsbuild:jarjar:1.7.2",
                  "org.jetbrains.kotlinx:atomicfu-js:0.15.2",
                  "org.jetbrains.kotlinx:kotlinx-serialization-runtime:1.0-M1-1.4.0-rc"
                ],
                "fetch_sources": true,
                "repositories": [
                  "https://maven-central.storage.googleapis.com/repos/central/data/",
                  "https://maven.google.com",
                  "https://repo1.maven.org/maven2"
                ]
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_kotlin/1.9.0/MODULE.bazel",
                "line": 38,
                "column": 14
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "platforms": "platforms@0.0.10",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "rules_java": "rules_java@7.4.0",
        "rules_python": "rules_python@0.38.0",
        "rules_cc": "rules_cc@0.0.9",
        "rules_jvm_external": "rules_jvm_external@6.0",
        "rules_pkg": "rules_pkg@0.7.0",
        "io_bazel_stardoc": "stardoc@0.6.2",
        "rules_proto": "rules_proto@6.0.2",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/bazelbuild/rules_kotlin/releases/download/v1.9.0/rules_kotlin-v1.9.0.tar.gz"
          ],
          "integrity": "sha256-V2bx5Zms9VGqVvSdq5q5EIJpsDxVdJbFSsr0H5jiuNY=",
          "strip_prefix": "",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_kotlin/1.9.0/patches/module_dot_bazel_version.patch": "sha256-nDFDlp2ujd74k9mEF0Bh7pZqBt+CUCF2bZHIaFgM25g="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "rules_foreign_cc@0.10.1": {
      "name": "rules_foreign_cc",
      "version": "0.10.1",
      "key": "rules_foreign_cc@0.10.1",
      "repoName": "rules_foreign_cc",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@rules_foreign_cc_framework_toolchains//:all",
        "@rules_foreign_cc//toolchains:built_make_toolchain",
        "@rules_foreign_cc//toolchains:built_meson_toolchain",
        "@rules_foreign_cc//toolchains:built_pkgconfig_toolchain",
        "@rules_foreign_cc//toolchains:preinstalled_autoconf_toolchain",
        "@rules_foreign_cc//toolchains:preinstalled_automake_toolchain",
        "@rules_foreign_cc//toolchains:preinstalled_m4_toolchain",
        "@rules_foreign_cc//toolchains:preinstalled_pkgconfig_toolchain",
        "@cmake_3.23.2_toolchains//:all",
        "@ninja_1.11.1_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_foreign_cc//foreign_cc:extensions.bzl",
          "extensionName": "tools",
          "usingModule": "rules_foreign_cc@0.10.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_foreign_cc/0.10.1/MODULE.bazel",
            "line": 14,
            "column": 22
          },
          "imports": {
            "cmake_3.23.2_toolchains": "cmake_3.23.2_toolchains",
            "cmake_src": "cmake_src",
            "gnumake_src": "gnumake_src",
            "meson_src": "meson_src",
            "ninja_1.11.1_toolchains": "ninja_1.11.1_toolchains",
            "ninja_build_src": "ninja_build_src",
            "pkgconfig_src": "pkgconfig_src",
            "rules_foreign_cc_framework_toolchains": "rules_foreign_cc_framework_toolchains"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.7.1",
        "platforms": "platforms@0.0.10",
        "rules_python": "rules_python@0.38.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/bazelbuild/rules_foreign_cc/releases/download/0.10.1/rules_foreign_cc-0.10.1.tar.gz"
          ],
          "integrity": "sha256-R2MDvQ8bBMwxH8JY8XCKX274LTCR5T/Rl3+iA4NCWmo=",
          "strip_prefix": "rules_foreign_cc-0.10.1",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_foreign_cc/0.10.1/patches/module_dot_bazel.patch": "sha256-hDvLi+Nx91lvhEd2qRrPfPu0RjiG5w3a/c4N4AiJb3U="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "libpfm@4.11.0": {
      "name": "libpfm",
      "version": "4.11.0",
      "key": "libpfm@4.11.0",
      "repoName": "libpfm",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "platforms": "platforms@0.0.10",
        "rules_foreign_cc": "rules_foreign_cc@0.10.1",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://sourceforge.net/projects/perfmon2/files/libpfm4/libpfm-4.11.0.tar.gz"
          ],
          "integrity": "sha256-XaX4hyveFLNjTJaI2YD2i9ootRAmhyPMEpc+7bq5/sw=",
          "strip_prefix": "libpfm-4.11.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/libpfm/4.11.0/patches/module_dot_bazel.patch": "sha256-G0wQJ2mVEoW/L5LGzmbNfuZaxI2+9NDuWJtqvCpM1pc=",
            "https://bcr.bazel.build/modules/libpfm/4.11.0/patches/add_build_file.patch": "sha256-E61d/qQgmeOcUliWaveHPp1EZoOjkvZJsqhGhHofqUg="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "grpc-java@1.62.2": {
      "name": "grpc-java",
      "version": "1.62.2",
      "key": "grpc-java@1.62.2",
      "repoName": "io_grpc_grpc_java",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@io_grpc_grpc_java//:repositories.bzl",
          "extensionName": "grpc_java_repositories_extension",
          "usingModule": "grpc-java@1.62.2",
          "location": {
            "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
            "line": 16,
            "column": 32
          },
          "imports": {
            "com_github_cncf_xds": "com_github_cncf_xds",
            "envoy_api": "envoy_api",
            "io_grpc_grpc_proto": "io_grpc_grpc_proto"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@com_github_grpc_grpc//bazel:grpc_deps.bzl",
          "extensionName": "grpc_repo_deps_ext",
          "usingModule": "grpc-java@1.62.2",
          "location": {
            "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
            "line": 24,
            "column": 35
          },
          "imports": {
            "com_envoyproxy_protoc_gen_validate": "com_envoyproxy_protoc_gen_validate",
            "com_github_cncf_udpa": "com_github_cncf_udpa",
            "opencensus_proto": "opencensus_proto"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_jvm_external//:extensions.bzl",
          "extensionName": "maven",
          "usingModule": "grpc-java@1.62.2",
          "location": {
            "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
            "line": 32,
            "column": 22
          },
          "imports": {
            "grpc_java_maven": "grpc_java_maven",
            "unpinned_grpc_java_maven": "unpinned_grpc_java_maven"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "install",
              "attributeValues": {
                "name": "grpc_java_maven",
                "artifacts": [
                  "com.google.android:annotations:4.1.1.4",
                  "com.google.api.grpc:proto-google-common-protos:2.29.0",
                  "com.google.auth:google-auth-library-credentials:1.4.0",
                  "com.google.auth:google-auth-library-oauth2-http:1.4.0",
                  "com.google.auto.value:auto-value-annotations:1.10.4",
                  "com.google.auto.value:auto-value:1.10.4",
                  "com.google.code.findbugs:jsr305:3.0.2",
                  "com.google.code.gson:gson:2.10.1",
                  "com.google.errorprone:error_prone_annotations:2.23.0",
                  "com.google.guava:failureaccess:1.0.1",
                  "com.google.guava:guava:32.1.3-android",
                  "com.google.re2j:re2j:1.7",
                  "com.google.truth:truth:1.1.5",
                  "com.squareup.okhttp:okhttp:2.7.5",
                  "com.squareup.okio:okio:2.10.0",
                  "io.netty:netty-buffer:4.1.100.Final",
                  "io.netty:netty-codec-http2:4.1.100.Final",
                  "io.netty:netty-codec-http:4.1.100.Final",
                  "io.netty:netty-codec-socks:4.1.100.Final",
                  "io.netty:netty-codec:4.1.100.Final",
                  "io.netty:netty-common:4.1.100.Final",
                  "io.netty:netty-handler-proxy:4.1.100.Final",
                  "io.netty:netty-handler:4.1.100.Final",
                  "io.netty:netty-resolver:4.1.100.Final",
                  "io.netty:netty-tcnative-boringssl-static:2.0.61.Final",
                  "io.netty:netty-tcnative-classes:2.0.61.Final",
                  "io.netty:netty-transport-native-epoll:jar:linux-x86_64:4.1.100.Final",
                  "io.netty:netty-transport-native-unix-common:4.1.100.Final",
                  "io.netty:netty-transport:4.1.100.Final",
                  "io.opencensus:opencensus-api:0.31.0",
                  "io.opencensus:opencensus-contrib-grpc-metrics:0.31.0",
                  "io.perfmark:perfmark-api:0.26.0",
                  "junit:junit:4.13.2",
                  "org.apache.tomcat:annotations-api:6.0.53",
                  "org.codehaus.mojo:animal-sniffer-annotations:1.23"
                ],
                "lock_file": "//:maven_install.json",
                "repositories": [
                  "https://repo1.maven.org/maven2",
                  "https://maven.google.com"
                ]
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
                "line": 33,
                "column": 14
              }
            },
            {
              "tagName": "override",
              "attributeValues": {
                "name": "grpc_java_maven",
                "coordinates": "com.google.protobuf:protobuf-java",
                "target": "@com_google_protobuf//:protobuf_java"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
                "line": 79,
                "column": 15
              }
            },
            {
              "tagName": "override",
              "attributeValues": {
                "name": "grpc_java_maven",
                "coordinates": "com.google.protobuf:protobuf-java-util",
                "target": "@com_google_protobuf//:protobuf_java_util"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
                "line": 84,
                "column": 15
              }
            },
            {
              "tagName": "override",
              "attributeValues": {
                "name": "grpc_java_maven",
                "coordinates": "com.google.protobuf:protobuf-javalite",
                "target": "@com_google_protobuf_javalite//:protobuf_javalite"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
                "line": 89,
                "column": 15
              }
            },
            {
              "tagName": "override",
              "attributeValues": {
                "name": "grpc_java_maven",
                "coordinates": "io.grpc:grpc-alts",
                "target": "@io_grpc_grpc_java//alts"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
                "line": 94,
                "column": 15
              }
            },
            {
              "tagName": "override",
              "attributeValues": {
                "name": "grpc_java_maven",
                "coordinates": "io.grpc:grpc-api",
                "target": "@io_grpc_grpc_java//api"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
                "line": 99,
                "column": 15
              }
            },
            {
              "tagName": "override",
              "attributeValues": {
                "name": "grpc_java_maven",
                "coordinates": "io.grpc:grpc-auth",
                "target": "@io_grpc_grpc_java//auth"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
                "line": 104,
                "column": 15
              }
            },
            {
              "tagName": "override",
              "attributeValues": {
                "name": "grpc_java_maven",
                "coordinates": "io.grpc:grpc-census",
                "target": "@io_grpc_grpc_java//census"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
                "line": 109,
                "column": 15
              }
            },
            {
              "tagName": "override",
              "attributeValues": {
                "name": "grpc_java_maven",
                "coordinates": "io.grpc:grpc-context",
                "target": "@io_grpc_grpc_java//context"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
                "line": 114,
                "column": 15
              }
            },
            {
              "tagName": "override",
              "attributeValues": {
                "name": "grpc_java_maven",
                "coordinates": "io.grpc:grpc-core",
                "target": "@io_grpc_grpc_java//core:core_maven"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
                "line": 119,
                "column": 15
              }
            },
            {
              "tagName": "override",
              "attributeValues": {
                "name": "grpc_java_maven",
                "coordinates": "io.grpc:grpc-googleapis",
                "target": "@io_grpc_grpc_java//googleapis"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
                "line": 124,
                "column": 15
              }
            },
            {
              "tagName": "override",
              "attributeValues": {
                "name": "grpc_java_maven",
                "coordinates": "io.grpc:grpc-grpclb",
                "target": "@io_grpc_grpc_java//grpclb"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
                "line": 129,
                "column": 15
              }
            },
            {
              "tagName": "override",
              "attributeValues": {
                "name": "grpc_java_maven",
                "coordinates": "io.grpc:grpc-inprocess",
                "target": "@io_grpc_grpc_java//inprocess"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
                "line": 134,
                "column": 15
              }
            },
            {
              "tagName": "override",
              "attributeValues": {
                "name": "grpc_java_maven",
                "coordinates": "io.grpc:grpc-netty",
                "target": "@io_grpc_grpc_java//netty"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
                "line": 139,
                "column": 15
              }
            },
            {
              "tagName": "override",
              "attributeValues": {
                "name": "grpc_java_maven",
                "coordinates": "io.grpc:grpc-netty-shaded",
                "target": "@io_grpc_grpc_java//netty:shaded_maven"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
                "line": 144,
                "column": 15
              }
            },
            {
              "tagName": "override",
              "attributeValues": {
                "name": "grpc_java_maven",
                "coordinates": "io.grpc:grpc-okhttp",
                "target": "@io_grpc_grpc_java//okhttp"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
                "line": 149,
                "column": 15
              }
            },
            {
              "tagName": "override",
              "attributeValues": {
                "name": "grpc_java_maven",
                "coordinates": "io.grpc:grpc-protobuf",
                "target": "@io_grpc_grpc_java//protobuf"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
                "line": 154,
                "column": 15
              }
            },
            {
              "tagName": "override",
              "attributeValues": {
                "name": "grpc_java_maven",
                "coordinates": "io.grpc:grpc-protobuf-lite",
                "target": "@io_grpc_grpc_java//protobuf-lite"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
                "line": 159,
                "column": 15
              }
            },
            {
              "tagName": "override",
              "attributeValues": {
                "name": "grpc_java_maven",
                "coordinates": "io.grpc:grpc-rls",
                "target": "@io_grpc_grpc_java//rls"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
                "line": 164,
                "column": 15
              }
            },
            {
              "tagName": "override",
              "attributeValues": {
                "name": "grpc_java_maven",
                "coordinates": "io.grpc:grpc-services",
                "target": "@io_grpc_grpc_java//services:services_maven"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
                "line": 169,
                "column": 15
              }
            },
            {
              "tagName": "override",
              "attributeValues": {
                "name": "grpc_java_maven",
                "coordinates": "io.grpc:grpc-stub",
                "target": "@io_grpc_grpc_java//stub"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
                "line": 174,
                "column": 15
              }
            },
            {
              "tagName": "override",
              "attributeValues": {
                "name": "grpc_java_maven",
                "coordinates": "io.grpc:grpc-testing",
                "target": "@io_grpc_grpc_java//testing"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
                "line": 179,
                "column": 15
              }
            },
            {
              "tagName": "override",
              "attributeValues": {
                "name": "grpc_java_maven",
                "coordinates": "io.grpc:grpc-xds",
                "target": "@io_grpc_grpc_java//xds:xds_maven"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
                "line": 184,
                "column": 15
              }
            },
            {
              "tagName": "override",
              "attributeValues": {
                "name": "grpc_java_maven",
                "coordinates": "io.grpc:grpc-util",
                "target": "@io_grpc_grpc_java//util"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
                "line": 189,
                "column": 15
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@com_google_googleapis//:extensions.bzl",
          "extensionName": "switched_rules",
          "usingModule": "grpc-java@1.62.2",
          "location": {
            "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
            "line": 195,
            "column": 31
          },
          "imports": {
            "com_google_googleapis_imports": "com_google_googleapis_imports"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "use_languages",
              "attributeValues": {
                "java": true
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/grpc-java/1.62.2/MODULE.bazel",
                "line": 196,
                "column": 29
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "com_google_googleapis": "googleapis@0.0.0-20240326-1c8d509c5",
        "com_github_grpc_grpc": "grpc@1.65.0",
        "com_google_protobuf": "protobuf@27.1",
        "rules_cc": "rules_cc@0.0.9",
        "io_bazel_rules_go": "rules_go@0.50.1",
        "rules_jvm_external": "rules_jvm_external@6.0",
        "rules_proto": "rules_proto@6.0.2",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/grpc/grpc-java/archive/refs/tags/v1.62.2.tar.gz"
          ],
          "integrity": "sha256-MM/JVMIXRJOCJgGnS4doN5hsRE2bnpFwgplLXjQ0jzQ=",
          "strip_prefix": "grpc-java-1.62.2",
          "remote_patches": {
            "https://bcr.bazel.build/modules/grpc-java/1.62.2/patches/add_module_bazel.patch": "sha256-CBDMVs47Z5StAQx+xSGGJCVqkmz9WtK0flsU9rb4MkE=",
            "https://bcr.bazel.build/modules/grpc-java/1.62.2/patches/maven_lockfile.patch": "sha256-VSRs53yvnCbNzxLFLSvf2FmBCGnJrD+ArNMN2QKLBbs=",
            "https://bcr.bazel.build/modules/grpc-java/1.62.2/patches/update_labels.patch": "sha256-22pO7tCUdPKjo4xOasAdrU2N50aHAH2bYAoSkPN4HeU="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "curl@8.4.0": {
      "name": "curl",
      "version": "8.4.0",
      "key": "curl@8.4.0",
      "repoName": "curl",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "platforms": "platforms@0.0.10",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/curl/curl/releases/download/curl-8_4_0/curl-8.4.0.tar.gz"
          ],
          "integrity": "sha256-gW5BgJwEP/KF6MDwanWh+iUCEbv7LcCgN+7vOfGp5Cc=",
          "strip_prefix": "curl-8.4.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/curl/8.4.0/patches/add_build_file.patch": "sha256-Vcb973u9Diuzp+nG0XzkID+LvaTdbJ6M6tZxH1Vtyo0=",
            "https://bcr.bazel.build/modules/curl/8.4.0/patches/module_dot_bazel.patch": "sha256-EEYIkUUDdDiyntAtQHOhsgwqJgs/EvZP6pjuxPUeWIo="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "nlohmann_json@3.11.3": {
      "name": "nlohmann_json",
      "version": "3.11.3",
      "key": "nlohmann_json@3.11.3",
      "repoName": "nlohmann_json",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/nlohmann/json/releases/download/v3.11.3/include.zip"
          ],
          "integrity": "sha256-oiRh0TEZrFx48gXT3x2xNAPljOG7F5TtyTE2dzE/Sp0=",
          "strip_prefix": "",
          "remote_patches": {
            "https://bcr.bazel.build/modules/nlohmann_json/3.11.3/patches/module_dot_bazel.patch": "sha256-OmeSCp1IqWbHGPJs0v5taUiPLEsI9KEJPLsnPpKB/B8="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "opentelemetry-proto@1.1.0": {
      "name": "opentelemetry-proto",
      "version": "1.1.0",
      "key": "opentelemetry-proto@1.1.0",
      "repoName": "opentelemetry-proto",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "com_github_grpc_grpc": "grpc@1.65.0",
        "rules_proto": "rules_proto@6.0.2",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/open-telemetry/opentelemetry-proto/archive/refs/tags/v1.1.0.tar.gz"
          ],
          "integrity": "sha256-30kaBfP8v4bMW6XJ3oH2piTXTUdz1wCdVz431uK2r2Q=",
          "strip_prefix": "opentelemetry-proto-1.1.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/opentelemetry-proto/1.1.0/patches/0001-Add-MODULE.bazel.patch": "sha256-RrO6zvMf7Z36RlhKw/7d3/6RnyTbMpQfOp8kq2bqWJw="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "opentracing-cpp@1.6.0": {
      "name": "opentracing-cpp",
      "version": "1.6.0",
      "key": "opentracing-cpp@1.6.0",
      "repoName": "opentracing-cpp",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/opentracing/opentracing-cpp/archive/refs/tags/v1.6.0.tar.gz"
          ],
          "integrity": "sha256-WxcAQtpNHEwjHfZZTaEgh1Qp1SMem6pReYIu6NEFSsM=",
          "strip_prefix": "opentracing-cpp-1.6.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/opentracing-cpp/1.6.0/patches/module_dot_bazel.patch": "sha256-Nq2stVYG8NW6QVnQLlhzD55Llshidjb/0EVi8LhWFys="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "upb@0.0.0-20230907-e7430e6": {
      "name": "upb",
      "version": "0.0.0-20230907-e7430e6",
      "key": "upb@0.0.0-20230907-e7430e6",
      "repoName": "upb",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@upb//:non_module_deps.bzl",
          "extensionName": "non_module_deps",
          "usingModule": "upb@0.0.0-20230907-e7430e6",
          "location": {
            "file": "https://bcr.bazel.build/modules/upb/0.0.0-20230907-e7430e6/MODULE.bazel",
            "line": 18,
            "column": 32
          },
          "imports": {
            "utf8_range": "utf8_range"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "com_google_absl": "abseil-cpp@20240116.2",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "platforms": "platforms@0.0.10",
        "rules_cc": "rules_cc@0.0.9",
        "com_google_protobuf": "protobuf@27.1",
        "rules_pkg": "rules_pkg@0.7.0",
        "rules_proto": "rules_proto@6.0.2",
        "rules_python": "rules_python@0.38.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/protocolbuffers/upb/archive/e7430e66d6e51def2a88f0b66fdab62b0d9492c1.tar.gz"
          ],
          "integrity": "sha256-o1DZS2CWjimNFBLfUcH/fVGQ3RPtsXseB2asNpwXQAk=",
          "strip_prefix": "upb-e7430e66d6e51def2a88f0b66fdab62b0d9492c1",
          "remote_patches": {
            "https://bcr.bazel.build/modules/upb/0.0.0-20230907-e7430e6/patches/0001-Add-MODULE.bazel.patch": "sha256-AC7tn9EKtF9UprYQKdPxH/PQGLF9U0jgoSZfh/rzmuc=",
            "https://bcr.bazel.build/modules/upb/0.0.0-20230907-e7430e6/patches/0002-Add-utf8_range-dependency.patch": "sha256-zQDiCRqENGZ2Y5+WTjSgmkTWSaRHaU0vefc+XUxksaw=",
            "https://bcr.bazel.build/modules/upb/0.0.0-20230907-e7430e6/patches/0003-Add-textformat-alias.patch": "sha256-IHkHImqzDKY8zQqheZGwuluHqtkFbZgj0wfNXmvHf3w="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "rules_swift@1.18.0": {
      "name": "rules_swift",
      "version": "1.18.0",
      "key": "rules_swift@1.18.0",
      "repoName": "build_bazel_rules_swift",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@build_bazel_rules_swift//swift:extensions.bzl",
          "extensionName": "non_module_deps",
          "usingModule": "rules_swift@1.18.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_swift/1.18.0/MODULE.bazel",
            "line": 18,
            "column": 32
          },
          "imports": {
            "build_bazel_rules_swift_index_import": "build_bazel_rules_swift_index_import",
            "build_bazel_rules_swift_local_config": "build_bazel_rules_swift_local_config",
            "com_github_apple_swift_log": "com_github_apple_swift_log",
            "com_github_apple_swift_nio": "com_github_apple_swift_nio",
            "com_github_apple_swift_nio_extras": "com_github_apple_swift_nio_extras",
            "com_github_apple_swift_nio_http2": "com_github_apple_swift_nio_http2",
            "com_github_apple_swift_nio_transport_services": "com_github_apple_swift_nio_transport_services",
            "com_github_apple_swift_protobuf": "com_github_apple_swift_protobuf",
            "com_github_grpc_grpc_swift": "com_github_grpc_grpc_swift"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@build_bazel_apple_support//crosstool:setup.bzl",
          "extensionName": "apple_cc_configure_extension",
          "usingModule": "rules_swift@1.18.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_swift/1.18.0/MODULE.bazel",
            "line": 32,
            "column": 35
          },
          "imports": {
            "local_config_apple_cc": "local_config_apple_cc"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_features": "bazel_features@1.9.1",
        "bazel_skylib": "bazel_skylib@1.7.1",
        "build_bazel_apple_support": "apple_support@1.15.1",
        "rules_cc": "rules_cc@0.0.9",
        "platforms": "platforms@0.0.10",
        "com_google_protobuf": "protobuf@27.1",
        "rules_proto": "rules_proto@6.0.2",
        "com_github_nlohmann_json": "nlohmann_json@3.11.3",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "urls": [
            "https://github.com/bazelbuild/rules_swift/releases/download/1.18.0/rules_swift.1.18.0.tar.gz"
          ],
          "integrity": "sha256-uwEJfHx6FAf4rUmhoLGWBlXPgjwmrSeC0LfRWzI4OOI=",
          "strip_prefix": "",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_swift/1.18.0/patches/module_dot_bazel_version.patch": "sha256-IbMYYiF3ZTck4WX28+F6JdMlYZT51lyc02dArbRvrLc="
          },
          "remote_patch_strip": 1
        }
      }
    }
  },
  "moduleExtensions": {
    "@@apple_support~//crosstool:setup.bzl%apple_cc_configure_extension": {
      "general": {
        "bzlTransitiveDigest": "RyR+EbN4fAzxxZSQKwXXrxEtMVrezn79MOR/2mmcmYk=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "local_config_apple_cc": {
            "bzlFile": "@@apple_support~//crosstool:setup.bzl",
            "ruleClassName": "_apple_cc_autoconf",
            "attributes": {}
          },
          "local_config_apple_cc_toolchains": {
            "bzlFile": "@@apple_support~//crosstool:setup.bzl",
            "ruleClassName": "_apple_cc_autoconf_toolchains",
            "attributes": {}
          }
        },
        "recordedRepoMappingEntries": [
          [
            "apple_support~",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@bazel_features~//private:extensions.bzl%version_extension": {
      "general": {
        "bzlTransitiveDigest": "UwYHXjy4P9iCTMR9n5kWsy4RwLoowjUrfDFTkBo5RG8=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "bazel_features_version": {
            "bzlFile": "@@bazel_features~//private:version_repo.bzl",
            "ruleClassName": "version_repo",
            "attributes": {}
          },
          "bazel_features_globals": {
            "bzlFile": "@@bazel_features~//private:globals_repo.bzl",
            "ruleClassName": "globals_repo",
            "attributes": {
              "globals": {
                "RunEnvironmentInfo": "5.3.0",
                "DefaultInfo": "0.0.1",
                "__TestingOnly_NeverAvailable": "1000000000.0.0"
              }
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "bazel_features~",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@bazel_tools//tools/cpp:cc_configure.bzl%cc_configure_extension": {
      "general": {
        "bzlTransitiveDigest": "PHpT2yqMGms2U4L3E/aZ+WcQalmZWm+ILdP3yiLsDhA=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "local_config_cc": {
            "bzlFile": "@@bazel_tools//tools/cpp:cc_configure.bzl",
            "ruleClassName": "cc_autoconf",
            "attributes": {}
          },
          "local_config_cc_toolchains": {
            "bzlFile": "@@bazel_tools//tools/cpp:cc_configure.bzl",
            "ruleClassName": "cc_autoconf_toolchains",
            "attributes": {}
          }
        },
        "recordedRepoMappingEntries": [
          [
            "bazel_tools",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@bazel_tools//tools/osx:xcode_configure.bzl%xcode_configure_extension": {
      "general": {
        "bzlTransitiveDigest": "Qh2bWTU6QW6wkrd87qrU4YeY+SG37Nvw3A0PR4Y0L2Y=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "local_config_xcode": {
            "bzlFile": "@@bazel_tools//tools/osx:xcode_configure.bzl",
            "ruleClassName": "xcode_autoconf",
            "attributes": {
              "xcode_locator": "@bazel_tools//tools/osx:xcode_locator.m",
              "remote_xcode": ""
            }
          }
        },
        "recordedRepoMappingEntries": []
      }
    },
    "@@bazel_tools//tools/sh:sh_configure.bzl%sh_configure_extension": {
      "general": {
        "bzlTransitiveDigest": "hp4NgmNjEg5+xgvzfh6L83bt9/aiiWETuNpwNuF1MSU=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "local_config_sh": {
            "bzlFile": "@@bazel_tools//tools/sh:sh_configure.bzl",
            "ruleClassName": "sh_config",
            "attributes": {}
          }
        },
        "recordedRepoMappingEntries": []
      }
    },
    "@@googleapis~//:extensions.bzl%switched_rules": {
      "general": {
        "bzlTransitiveDigest": "vG6fuTzXD8MMvHWZEQud0MMH7eoC4GXY0va7VrFFh04=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "com_google_googleapis_imports": {
            "bzlFile": "@@googleapis~//:repository_rules.bzl",
            "ruleClassName": "switched_rules",
            "attributes": {
              "rules": {
                "proto_library_with_info": [
                  "",
                  ""
                ],
                "moved_proto_library": [
                  "",
                  ""
                ],
                "java_proto_library": [
                  "",
                  ""
                ],
                "java_grpc_library": [
                  "",
                  ""
                ],
                "java_gapic_library": [
                  "",
                  ""
                ],
                "java_gapic_test": [
                  "",
                  ""
                ],
                "java_gapic_assembly_gradle_pkg": [
                  "",
                  ""
                ],
                "py_proto_library": [
                  "",
                  ""
                ],
                "py_grpc_library": [
                  "",
                  ""
                ],
                "py_gapic_library": [
                  "",
                  ""
                ],
                "py_test": [
                  "",
                  ""
                ],
                "py_gapic_assembly_pkg": [
                  "",
                  ""
                ],
                "py_import": [
                  "",
                  ""
                ],
                "go_proto_library": [
                  "",
                  ""
                ],
                "go_grpc_library": [
                  "",
                  ""
                ],
                "go_library": [
                  "",
                  ""
                ],
                "go_test": [
                  "",
                  ""
                ],
                "go_gapic_library": [
                  "",
                  ""
                ],
                "go_gapic_assembly_pkg": [
                  "",
                  ""
                ],
                "cc_proto_library": [
                  "",
                  ""
                ],
                "cc_grpc_library": [
                  "",
                  ""
                ],
                "cc_gapic_library": [
                  "",
                  ""
                ],
                "php_proto_library": [
                  "",
                  "php_proto_library"
                ],
                "php_grpc_library": [
                  "",
                  "php_grpc_library"
                ],
                "php_gapic_library": [
                  "",
                  "php_gapic_library"
                ],
                "php_gapic_assembly_pkg": [
                  "",
                  "php_gapic_assembly_pkg"
                ],
                "nodejs_gapic_library": [
                  "",
                  "typescript_gapic_library"
                ],
                "nodejs_gapic_assembly_pkg": [
                  "",
                  "typescript_gapic_assembly_pkg"
                ],
                "ruby_proto_library": [
                  "",
                  ""
                ],
                "ruby_grpc_library": [
                  "",
                  ""
                ],
                "ruby_ads_gapic_library": [
                  "",
                  ""
                ],
                "ruby_cloud_gapic_library": [
                  "",
                  ""
                ],
                "ruby_gapic_assembly_pkg": [
                  "",
                  ""
                ],
                "csharp_proto_library": [
                  "",
                  ""
                ],
                "csharp_grpc_library": [
                  "",
                  ""
                ],
                "csharp_gapic_library": [
                  "",
                  ""
                ],
                "csharp_gapic_assembly_pkg": [
                  "",
                  ""
                ]
              }
            }
          }
        },
        "recordedRepoMappingEntries": []
      }
    },
    "@@grpc~//bazel:grpc_deps.bzl%grpc_repo_deps_ext": {
      "general": {
        "bzlTransitiveDigest": "/YY5RKBu8xm6TyXU3LSOXaBH3NgAM9mgBz1VDKCwUSM=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "io_opencensus_cpp": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "sha256": "46b3b5812c150a21bacf860c2f76fc42b89773ed77ee954c32adeb8593aa2a8e",
              "strip_prefix": "opencensus-cpp-5501a1a255805e0be83a41348bb5f2630d5ed6b3",
              "urls": [
                "https://storage.googleapis.com/grpc-bazel-mirror/github.com/census-instrumentation/opencensus-cpp/archive/5501a1a255805e0be83a41348bb5f2630d5ed6b3.tar.gz",
                "https://github.com/census-instrumentation/opencensus-cpp/archive/5501a1a255805e0be83a41348bb5f2630d5ed6b3.tar.gz"
              ]
            }
          },
          "envoy_api": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "sha256": "ddd3beedda1178a79e0d988f76f362002aced09749452515853f106e22bd2249",
              "strip_prefix": "data-plane-api-78f198cf96ecdc7120ef640406770aa01af775c4",
              "urls": [
                "https://storage.googleapis.com/grpc-bazel-mirror/github.com/envoyproxy/data-plane-api/archive/78f198cf96ecdc7120ef640406770aa01af775c4.tar.gz",
                "https://github.com/envoyproxy/data-plane-api/archive/78f198cf96ecdc7120ef640406770aa01af775c4.tar.gz"
              ]
            }
          },
          "google_cloud_cpp": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "sha256": "7ca7f583b60d2aa1274411fed3b9fb3887119b2e84244bb3fc69ea1db819e4e5",
              "strip_prefix": "google-cloud-cpp-2.16.0",
              "urls": [
                "https://storage.googleapis.com/grpc-bazel-mirror/github.com/googleapis/google-cloud-cpp/archive/refs/tags/v2.16.0.tar.gz",
                "https://github.com/googleapis/google-cloud-cpp/archive/refs/tags/v2.16.0.tar.gz"
              ]
            }
          },
          "com_github_cncf_xds": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "sha256": "dc305e20c9fa80822322271b50aa2ffa917bf4fd3973bcec52bfc28dc32c5927",
              "strip_prefix": "xds-3a472e524827f72d1ad621c4983dd5af54c46776",
              "urls": [
                "https://storage.googleapis.com/grpc-bazel-mirror/github.com/cncf/xds/archive/3a472e524827f72d1ad621c4983dd5af54c46776.tar.gz",
                "https://github.com/cncf/xds/archive/3a472e524827f72d1ad621c4983dd5af54c46776.tar.gz"
              ]
            }
          },
          "com_github_cncf_udpa": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "sha256": "0d33b83f8c6368954e72e7785539f0d272a8aba2f6e2e336ed15fd1514bc9899",
              "strip_prefix": "xds-e9ce68804cb4e64cab5a52e3c8baf840d4ff87b7",
              "urls": [
                "https://storage.googleapis.com/grpc-bazel-mirror/github.com/cncf/xds/archive/e9ce68804cb4e64cab5a52e3c8baf840d4ff87b7.tar.gz",
                "https://github.com/cncf/xds/archive/e9ce68804cb4e64cab5a52e3c8baf840d4ff87b7.tar.gz"
              ]
            }
          },
          "com_envoyproxy_protoc_gen_validate": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "strip_prefix": "protoc-gen-validate-4694024279bdac52b77e22dc87808bd0fd732b69",
              "sha256": "1e490b98005664d149b379a9529a6aa05932b8a11b76b4cd86f3d22d76346f47",
              "urls": [
                "https://github.com/envoyproxy/protoc-gen-validate/archive/4694024279bdac52b77e22dc87808bd0fd732b69.tar.gz"
              ],
              "patches": [
                "@@grpc~//third_party:protoc-gen-validate.patch"
              ],
              "patch_args": [
                "-p1"
              ]
            }
          },
          "opencensus_proto": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "sha256": "b7e13f0b4259e80c3070b583c2f39e53153085a6918718b1c710caf7037572b0",
              "strip_prefix": "opencensus-proto-0.3.0/src",
              "urls": [
                "https://storage.googleapis.com/grpc-bazel-mirror/github.com/census-instrumentation/opencensus-proto/archive/v0.3.0.tar.gz",
                "https://github.com/census-instrumentation/opencensus-proto/archive/v0.3.0.tar.gz"
              ]
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "grpc~",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "grpc~",
            "com_github_grpc_grpc",
            "grpc~"
          ]
        ]
      }
    },
    "@@pybind11_bazel~//:internal_configure.bzl%internal_configure_extension": {
      "general": {
        "bzlTransitiveDigest": "CjSdmaVStQ++cOc/e9OwC/xeh2nYK39I6+Az4UJUkds=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "pybind11": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file": "@@pybind11_bazel~//:pybind11-BUILD.bazel",
              "strip_prefix": "pybind11-2.13.6",
              "url": "https://github.com/pybind/pybind11/archive/refs/tags/v2.13.6.tar.gz",
              "integrity": "sha256-4Iy4f0dz2pf6e18DXeh2OrxlbYfVdz5i9toFh9Hw7CA="
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "pybind11_bazel~",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@rules_foreign_cc~//foreign_cc:extensions.bzl%tools": {
      "general": {
        "bzlTransitiveDigest": "2l17wMiQVlXlDgBIWDXCg9gmsR98F1JQiHf5BVcc8fk=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "cmake-3.23.2-linux-aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "urls": [
                "https://github.com/Kitware/CMake/releases/download/v3.23.2/cmake-3.23.2-linux-aarch64.tar.gz"
              ],
              "sha256": "f2654bf780b53f170bbbec44d8ac67d401d24788e590faa53036a89476efa91e",
              "strip_prefix": "cmake-3.23.2-linux-aarch64",
              "build_file_content": "load(\"@rules_foreign_cc//toolchains/native_tools:native_tools_toolchain.bzl\", \"native_tool_toolchain\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nfilegroup(\n    name = \"cmake_data\",\n    srcs = glob(\n        [\n            \"**\",\n        ],\n        exclude = [\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n        ],\n    ),\n)\n\nnative_tool_toolchain(\n    name = \"cmake_tool\",\n    path = \"bin/cmake\",\n    target = \":cmake_data\",\n)\n"
            }
          },
          "rules_foreign_cc_framework_toolchain_macos": {
            "bzlFile": "@@rules_foreign_cc~//foreign_cc/private/framework:toolchain.bzl",
            "ruleClassName": "framework_toolchain_repository",
            "attributes": {
              "commands_src": "@rules_foreign_cc//foreign_cc/private/framework/toolchains:macos_commands.bzl",
              "exec_compatible_with": [
                "@platforms//os:macos"
              ]
            }
          },
          "gnumake_src": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "filegroup(\n    name = \"all_srcs\",\n    srcs = glob([\"**\"]),\n    visibility = [\"//visibility:public\"],\n)\n",
              "sha256": "581f4d4e872da74b3941c874215898a7d35802f03732bdccee1d4a7979105d18",
              "strip_prefix": "make-4.4",
              "urls": [
                "https://mirror.bazel.build/ftpmirror.gnu.org/gnu/make/make-4.4.tar.gz",
                "http://ftpmirror.gnu.org/gnu/make/make-4.4.tar.gz"
              ]
            }
          },
          "gettext_runtime": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "\ncc_import(\n    name = \"gettext_runtime\",\n    shared_library = \"bin/libintl-8.dll\",\n    visibility = [\"//visibility:public\"],\n)\n        ",
              "sha256": "1f4269c0e021076d60a54e98da6f978a3195013f6de21674ba0edbc339c5b079",
              "urls": [
                "https://download.gnome.org/binaries/win64/dependencies/gettext-runtime_0.18.1.1-2_win64.zip"
              ]
            }
          },
          "cmake_src": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "filegroup(\n    name = \"all_srcs\",\n    srcs = glob([\"**\"]),\n    visibility = [\"//visibility:public\"],\n)\n",
              "sha256": "f316b40053466f9a416adf981efda41b160ca859e97f6a484b447ea299ff26aa",
              "strip_prefix": "cmake-3.23.2",
              "urls": [
                "https://github.com/Kitware/CMake/releases/download/v3.23.2/cmake-3.23.2.tar.gz"
              ]
            }
          },
          "bazel_skylib": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "urls": [
                "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.2.1/bazel-skylib-1.2.1.tar.gz",
                "https://github.com/bazelbuild/bazel-skylib/releases/download/1.2.1/bazel-skylib-1.2.1.tar.gz"
              ],
              "sha256": "f7be3474d42aae265405a592bb7da8e171919d74c16f082a5457840f06054728"
            }
          },
          "cmake-3.23.2-macos-universal": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "urls": [
                "https://github.com/Kitware/CMake/releases/download/v3.23.2/cmake-3.23.2-macos-universal.tar.gz"
              ],
              "sha256": "853a0f9af148c5ef47282ffffee06c4c9f257be2635936755f39ca13c3286c88",
              "strip_prefix": "cmake-3.23.2-macos-universal/CMake.app/Contents",
              "build_file_content": "load(\"@rules_foreign_cc//toolchains/native_tools:native_tools_toolchain.bzl\", \"native_tool_toolchain\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nfilegroup(\n    name = \"cmake_data\",\n    srcs = glob(\n        [\n            \"**\",\n        ],\n        exclude = [\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n        ],\n    ),\n)\n\nnative_tool_toolchain(\n    name = \"cmake_tool\",\n    path = \"bin/cmake\",\n    target = \":cmake_data\",\n)\n"
            }
          },
          "meson_src": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "exports_files([\"meson.py\"])\n\nfilegroup(\n    name = \"runtime\",\n    srcs = glob([\"mesonbuild/**\"]),\n    visibility = [\"//visibility:public\"],\n)\n",
              "strip_prefix": "meson-1.1.1",
              "url": "https://github.com/mesonbuild/meson/releases/download/1.1.1/meson-1.1.1.tar.gz"
            }
          },
          "rules_foreign_cc_framework_toolchain_freebsd": {
            "bzlFile": "@@rules_foreign_cc~//foreign_cc/private/framework:toolchain.bzl",
            "ruleClassName": "framework_toolchain_repository",
            "attributes": {
              "commands_src": "@rules_foreign_cc//foreign_cc/private/framework/toolchains:freebsd_commands.bzl",
              "exec_compatible_with": [
                "@platforms//os:freebsd"
              ]
            }
          },
          "rules_foreign_cc_framework_toolchain_linux": {
            "bzlFile": "@@rules_foreign_cc~//foreign_cc/private/framework:toolchain.bzl",
            "ruleClassName": "framework_toolchain_repository",
            "attributes": {
              "commands_src": "@rules_foreign_cc//foreign_cc/private/framework/toolchains:linux_commands.bzl",
              "exec_compatible_with": [
                "@platforms//os:linux"
              ]
            }
          },
          "rules_python": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "sha256": "84aec9e21cc56fbc7f1335035a71c850d1b9b5cc6ff497306f84cced9a769841",
              "strip_prefix": "rules_python-0.23.1",
              "url": "https://github.com/bazelbuild/rules_python/archive/refs/tags/0.23.1.tar.gz"
            }
          },
          "pkgconfig_src": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "filegroup(\n    name = \"all_srcs\",\n    srcs = glob([\"**\"]),\n    visibility = [\"//visibility:public\"],\n)\n",
              "sha256": "6fc69c01688c9458a57eb9a1664c9aba372ccda420a02bf4429fe610e7e7d591",
              "strip_prefix": "pkg-config-0.29.2",
              "patches": [
                "@@rules_foreign_cc~//toolchains:pkgconfig-detectenv.patch",
                "@@rules_foreign_cc~//toolchains:pkgconfig-makefile-vc.patch"
              ],
              "urls": [
                "https://pkgconfig.freedesktop.org/releases/pkg-config-0.29.2.tar.gz"
              ]
            }
          },
          "ninja_build_src": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "filegroup(\n    name = \"all_srcs\",\n    srcs = glob([\"**\"]),\n    visibility = [\"//visibility:public\"],\n)\n",
              "sha256": "31747ae633213f1eda3842686f83c2aa1412e0f5691d1c14dbbcc67fe7400cea",
              "strip_prefix": "ninja-1.11.1",
              "urls": [
                "https://github.com/ninja-build/ninja/archive/v1.11.1.tar.gz"
              ]
            }
          },
          "ninja_1.11.1_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "urls": [
                "https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-linux.zip"
              ],
              "sha256": "b901ba96e486dce377f9a070ed4ef3f79deb45f4ffe2938f8e7ddc69cfb3df77",
              "strip_prefix": "",
              "build_file_content": "load(\"@rules_foreign_cc//toolchains/native_tools:native_tools_toolchain.bzl\", \"native_tool_toolchain\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nfilegroup(\n    name = \"ninja_bin\",\n    srcs = [\"ninja\"],\n)\n\nnative_tool_toolchain(\n    name = \"ninja_tool\",\n    env = {\"NINJA\": \"$(execpath :ninja_bin)\"},\n    path = \"$(execpath :ninja_bin)\",\n    target = \":ninja_bin\",\n)\n"
            }
          },
          "glib_src": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "\ncc_import(\n    name = \"msvc_hdr\",\n    hdrs = [\"msvc_recommended_pragmas.h\"],\n    visibility = [\"//visibility:public\"],\n)\n        ",
              "sha256": "bc96f63112823b7d6c9f06572d2ad626ddac7eb452c04d762592197f6e07898e",
              "strip_prefix": "glib-2.26.1",
              "urls": [
                "https://download.gnome.org/sources/glib/2.26/glib-2.26.1.tar.gz"
              ]
            }
          },
          "cmake-3.23.2-windows-x86_64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "urls": [
                "https://github.com/Kitware/CMake/releases/download/v3.23.2/cmake-3.23.2-windows-x86_64.zip"
              ],
              "sha256": "2329387f3166b84c25091c86389fb891193967740c9bcf01e7f6d3306f7ffda0",
              "strip_prefix": "cmake-3.23.2-windows-x86_64",
              "build_file_content": "load(\"@rules_foreign_cc//toolchains/native_tools:native_tools_toolchain.bzl\", \"native_tool_toolchain\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nfilegroup(\n    name = \"cmake_data\",\n    srcs = glob(\n        [\n            \"**\",\n        ],\n        exclude = [\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n        ],\n    ),\n)\n\nnative_tool_toolchain(\n    name = \"cmake_tool\",\n    path = \"bin/cmake.exe\",\n    target = \":cmake_data\",\n)\n"
            }
          },
          "glib_runtime": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "\nexports_files(\n    [\n        \"bin/libgio-2.0-0.dll\",\n        \"bin/libglib-2.0-0.dll\",\n        \"bin/libgmodule-2.0-0.dll\",\n        \"bin/libgobject-2.0-0.dll\",\n        \"bin/libgthread-2.0-0.dll\",\n    ],\n    visibility = [\"//visibility:public\"],\n)\n        ",
              "sha256": "88d857087e86f16a9be651ee7021880b3f7ba050d34a1ed9f06113b8799cb973",
              "urls": [
                "https://download.gnome.org/binaries/win64/glib/2.26/glib_2.26.1-1_win64.zip"
              ]
            }
          },
          "rules_foreign_cc_framework_toolchains": {
            "bzlFile": "@@rules_foreign_cc~//foreign_cc/private/framework:toolchain.bzl",
            "ruleClassName": "framework_toolchain_repository_hub",
            "attributes": {}
          },
          "glib_dev": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "\nload(\"@rules_cc//cc:defs.bzl\", \"cc_library\")\n\ncc_import(\n    name = \"glib_dev\",\n    hdrs = glob([\"include/**\"]),\n    shared_library = \"@glib_runtime//:bin/libglib-2.0-0.dll\",\n    visibility = [\"//visibility:public\"],\n)\n        ",
              "sha256": "bdf18506df304d38be98a4b3f18055b8b8cca81beabecad0eece6ce95319c369",
              "urls": [
                "https://download.gnome.org/binaries/win64/glib/2.26/glib-dev_2.26.1-1_win64.zip"
              ]
            }
          },
          "ninja_1.11.1_mac": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "urls": [
                "https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-mac.zip"
              ],
              "sha256": "482ecb23c59ae3d4f158029112de172dd96bb0e97549c4b1ca32d8fad11f873e",
              "strip_prefix": "",
              "build_file_content": "load(\"@rules_foreign_cc//toolchains/native_tools:native_tools_toolchain.bzl\", \"native_tool_toolchain\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nfilegroup(\n    name = \"ninja_bin\",\n    srcs = [\"ninja\"],\n)\n\nnative_tool_toolchain(\n    name = \"ninja_tool\",\n    env = {\"NINJA\": \"$(execpath :ninja_bin)\"},\n    path = \"$(execpath :ninja_bin)\",\n    target = \":ninja_bin\",\n)\n"
            }
          },
          "cmake_3.23.2_toolchains": {
            "bzlFile": "@@rules_foreign_cc~//toolchains:prebuilt_toolchains_repository.bzl",
            "ruleClassName": "prebuilt_toolchains_repository",
            "attributes": {
              "repos": {
                "cmake-3.23.2-linux-aarch64": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:linux"
                ],
                "cmake-3.23.2-linux-x86_64": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:linux"
                ],
                "cmake-3.23.2-macos-universal": [
                  "@platforms//os:macos"
                ],
                "cmake-3.23.2-windows-i386": [
                  "@platforms//cpu:x86_32",
                  "@platforms//os:windows"
                ],
                "cmake-3.23.2-windows-x86_64": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:windows"
                ]
              },
              "tool": "cmake"
            }
          },
          "ninja_1.11.1_toolchains": {
            "bzlFile": "@@rules_foreign_cc~//toolchains:prebuilt_toolchains_repository.bzl",
            "ruleClassName": "prebuilt_toolchains_repository",
            "attributes": {
              "repos": {
                "ninja_1.11.1_linux": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:linux"
                ],
                "ninja_1.11.1_mac": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:macos"
                ],
                "ninja_1.11.1_win": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:windows"
                ]
              },
              "tool": "ninja"
            }
          },
          "ninja_1.11.1_win": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "urls": [
                "https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip"
              ],
              "sha256": "524b344a1a9a55005eaf868d991e090ab8ce07fa109f1820d40e74642e289abc",
              "strip_prefix": "",
              "build_file_content": "load(\"@rules_foreign_cc//toolchains/native_tools:native_tools_toolchain.bzl\", \"native_tool_toolchain\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nfilegroup(\n    name = \"ninja_bin\",\n    srcs = [\"ninja.exe\"],\n)\n\nnative_tool_toolchain(\n    name = \"ninja_tool\",\n    env = {\"NINJA\": \"$(execpath :ninja_bin)\"},\n    path = \"$(execpath :ninja_bin)\",\n    target = \":ninja_bin\",\n)\n"
            }
          },
          "cmake-3.23.2-windows-i386": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "urls": [
                "https://github.com/Kitware/CMake/releases/download/v3.23.2/cmake-3.23.2-windows-i386.zip"
              ],
              "sha256": "6a4fcd6a2315b93cb23c93507efccacc30c449c2bf98f14d6032bb226c582e07",
              "strip_prefix": "cmake-3.23.2-windows-i386",
              "build_file_content": "load(\"@rules_foreign_cc//toolchains/native_tools:native_tools_toolchain.bzl\", \"native_tool_toolchain\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nfilegroup(\n    name = \"cmake_data\",\n    srcs = glob(\n        [\n            \"**\",\n        ],\n        exclude = [\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n        ],\n    ),\n)\n\nnative_tool_toolchain(\n    name = \"cmake_tool\",\n    path = \"bin/cmake.exe\",\n    target = \":cmake_data\",\n)\n"
            }
          },
          "cmake-3.23.2-linux-x86_64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "urls": [
                "https://github.com/Kitware/CMake/releases/download/v3.23.2/cmake-3.23.2-linux-x86_64.tar.gz"
              ],
              "sha256": "aaced6f745b86ce853661a595bdac6c5314a60f8181b6912a0a4920acfa32708",
              "strip_prefix": "cmake-3.23.2-linux-x86_64",
              "build_file_content": "load(\"@rules_foreign_cc//toolchains/native_tools:native_tools_toolchain.bzl\", \"native_tool_toolchain\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nfilegroup(\n    name = \"cmake_data\",\n    srcs = glob(\n        [\n            \"**\",\n        ],\n        exclude = [\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n        ],\n    ),\n)\n\nnative_tool_toolchain(\n    name = \"cmake_tool\",\n    path = \"bin/cmake\",\n    target = \":cmake_data\",\n)\n"
            }
          },
          "rules_foreign_cc_framework_toolchain_windows": {
            "bzlFile": "@@rules_foreign_cc~//foreign_cc/private/framework:toolchain.bzl",
            "ruleClassName": "framework_toolchain_repository",
            "attributes": {
              "commands_src": "@rules_foreign_cc//foreign_cc/private/framework/toolchains:windows_commands.bzl",
              "exec_compatible_with": [
                "@platforms//os:windows"
              ]
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "rules_foreign_cc~",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "rules_foreign_cc~",
            "rules_foreign_cc",
            "rules_foreign_cc~"
          ]
        ]
      }
    },
    "@@rules_java~//java:extensions.bzl%toolchains": {
      "general": {
        "bzlTransitiveDigest": "0N5b5J9fUzo0sgvH4F3kIEaeXunz4Wy2/UtSFV/eXUY=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "remotejdk21_linux_toolchain_config_repo": {
            "bzlFile": "@@rules_java~//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_linux//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_linux//:jdk\",\n)\n"
            }
          },
          "remotejdk17_linux_s390x_toolchain_config_repo": {
            "bzlFile": "@@rules_java~//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:s390x\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_s390x//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:s390x\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_s390x//:jdk\",\n)\n"
            }
          },
          "remotejdk17_macos_toolchain_config_repo": {
            "bzlFile": "@@rules_java~//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_macos//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_macos//:jdk\",\n)\n"
            }
          },
          "remotejdk21_macos_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_macos_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_macos_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk17_linux_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk21_macos_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "e8260516de8b60661422a725f1df2c36ef888f6fb35393566b00e7325db3d04e",
              "strip_prefix": "zulu21.32.17-ca-jdk21.0.2-macosx_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.32.17-ca-jdk21.0.2-macosx_aarch64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu21.32.17-ca-jdk21.0.2-macosx_aarch64.tar.gz"
              ]
            }
          },
          "remotejdk17_linux_toolchain_config_repo": {
            "bzlFile": "@@rules_java~//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux//:jdk\",\n)\n"
            }
          },
          "remotejdk17_macos_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "314b04568ec0ae9b36ba03c9cbd42adc9e1265f74678923b19297d66eb84dcca",
              "strip_prefix": "zulu17.44.53-ca-jdk17.0.8.1-macosx_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-macosx_aarch64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-macosx_aarch64.tar.gz"
              ]
            }
          },
          "remote_java_tools_windows": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "sha256": "fe2f88169696d6c6fc6e90ba61bb46be7d0ae3693cbafdf336041bf56679e8d1",
              "urls": [
                "https://mirror.bazel.build/bazel_java_tools/releases/java/v13.4/java_tools_windows-v13.4.zip",
                "https://github.com/bazelbuild/java_tools/releases/download/java_v13.4/java_tools_windows-v13.4.zip"
              ]
            }
          },
          "remotejdk11_win": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "43408193ce2fa0862819495b5ae8541085b95660153f2adcf91a52d3a1710e83",
              "strip_prefix": "zulu11.66.15-ca-jdk11.0.20-win_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-win_x64.zip",
                "https://cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-win_x64.zip"
              ]
            }
          },
          "remotejdk11_win_toolchain_config_repo": {
            "bzlFile": "@@rules_java~//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_win//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_win//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "54174439f2b3fddd11f1048c397fe7bb45d4c9d66d452d6889b013d04d21c4de",
              "strip_prefix": "zulu11.66.15-ca-jdk11.0.20-linux_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-linux_aarch64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-linux_aarch64.tar.gz"
              ]
            }
          },
          "remotejdk17_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "b9482f2304a1a68a614dfacddcf29569a72f0fac32e6c74f83dc1b9a157b8340",
              "strip_prefix": "zulu17.44.53-ca-jdk17.0.8.1-linux_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-linux_x64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-linux_x64.tar.gz"
              ]
            }
          },
          "remotejdk11_linux_s390x_toolchain_config_repo": {
            "bzlFile": "@@rules_java~//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:s390x\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_s390x//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:s390x\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_s390x//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux_toolchain_config_repo": {
            "bzlFile": "@@rules_java~//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux//:jdk\",\n)\n"
            }
          },
          "remotejdk11_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "bcaab11cfe586fae7583c6d9d311c64384354fb2638eb9a012eca4c3f1a1d9fd",
              "strip_prefix": "zulu11.66.15-ca-jdk11.0.20-macosx_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-macosx_x64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-macosx_x64.tar.gz"
              ]
            }
          },
          "remotejdk11_win_arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "b8a28e6e767d90acf793ea6f5bed0bb595ba0ba5ebdf8b99f395266161e53ec2",
              "strip_prefix": "jdk-11.0.13+8",
              "urls": [
                "https://mirror.bazel.build/aka.ms/download-jdk/microsoft-jdk-11.0.13.8.1-windows-aarch64.zip"
              ]
            }
          },
          "remotejdk17_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "640453e8afe8ffe0fb4dceb4535fb50db9c283c64665eebb0ba68b19e65f4b1f",
              "strip_prefix": "zulu17.44.53-ca-jdk17.0.8.1-macosx_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-macosx_x64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-macosx_x64.tar.gz"
              ]
            }
          },
          "remotejdk21_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "3ad8fe288eb57d975c2786ae453a036aa46e47ab2ac3d81538ebae2a54d3c025",
              "strip_prefix": "zulu21.32.17-ca-jdk21.0.2-macosx_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.32.17-ca-jdk21.0.2-macosx_x64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu21.32.17-ca-jdk21.0.2-macosx_x64.tar.gz"
              ]
            }
          },
          "remotejdk21_macos_toolchain_config_repo": {
            "bzlFile": "@@rules_java~//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_macos//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_macos//:jdk\",\n)\n"
            }
          },
          "remotejdk17_macos_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_macos_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_macos_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk17_win": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "192f2afca57701de6ec496234f7e45d971bf623ff66b8ee4a5c81582054e5637",
              "strip_prefix": "zulu17.44.53-ca-jdk17.0.8.1-win_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-win_x64.zip",
                "https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-win_x64.zip"
              ]
            }
          },
          "remotejdk11_macos_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_macos_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_macos_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux_ppc64le_toolchain_config_repo": {
            "bzlFile": "@@rules_java~//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:ppc\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_ppc64le//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:ppc\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_ppc64le//:jdk\",\n)\n"
            }
          },
          "remotejdk21_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "5ad730fbee6bb49bfff10bf39e84392e728d89103d3474a7e5def0fd134b300a",
              "strip_prefix": "zulu21.32.17-ca-jdk21.0.2-linux_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.32.17-ca-jdk21.0.2-linux_x64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu21.32.17-ca-jdk21.0.2-linux_x64.tar.gz"
              ]
            }
          },
          "remote_java_tools_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "sha256": "ba10f09a138cf185d04cbc807d67a3da42ab13d618c5d1ce20d776e199c33a39",
              "urls": [
                "https://mirror.bazel.build/bazel_java_tools/releases/java/v13.4/java_tools_linux-v13.4.zip",
                "https://github.com/bazelbuild/java_tools/releases/download/java_v13.4/java_tools_linux-v13.4.zip"
              ]
            }
          },
          "remotejdk21_win": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "f7cc15ca17295e69c907402dfe8db240db446e75d3b150da7bf67243cded93de",
              "strip_prefix": "zulu21.32.17-ca-jdk21.0.2-win_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.32.17-ca-jdk21.0.2-win_x64.zip",
                "https://cdn.azul.com/zulu/bin/zulu21.32.17-ca-jdk21.0.2-win_x64.zip"
              ]
            }
          },
          "remotejdk21_linux_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "ce7df1af5d44a9f455617c4b8891443fbe3e4b269c777d8b82ed66f77167cfe0",
              "strip_prefix": "zulu21.32.17-ca-jdk21.0.2-linux_aarch64",
              "urls": [
                "https://cdn.azul.com/zulu/bin/zulu21.32.17-ca-jdk21.0.2-linux_aarch64.tar.gz",
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.32.17-ca-jdk21.0.2-linux_aarch64.tar.gz"
              ]
            }
          },
          "remotejdk11_linux_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux_s390x": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "a58fc0361966af0a5d5a31a2d8a208e3c9bb0f54f345596fd80b99ea9a39788b",
              "strip_prefix": "jdk-11.0.15+10",
              "urls": [
                "https://mirror.bazel.build/github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15+10/OpenJDK11U-jdk_s390x_linux_hotspot_11.0.15_10.tar.gz",
                "https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15+10/OpenJDK11U-jdk_s390x_linux_hotspot_11.0.15_10.tar.gz"
              ]
            }
          },
          "remotejdk17_linux_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "6531cef61e416d5a7b691555c8cf2bdff689201b8a001ff45ab6740062b44313",
              "strip_prefix": "zulu17.44.53-ca-jdk17.0.8.1-linux_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-linux_aarch64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-linux_aarch64.tar.gz"
              ]
            }
          },
          "remotejdk17_win_arm64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:arm64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_win_arm64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:arm64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_win_arm64//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "a34b404f87a08a61148b38e1416d837189e1df7a040d949e743633daf4695a3c",
              "strip_prefix": "zulu11.66.15-ca-jdk11.0.20-linux_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-linux_x64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-linux_x64.tar.gz"
              ]
            }
          },
          "remotejdk11_macos_toolchain_config_repo": {
            "bzlFile": "@@rules_java~//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_macos//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_macos//:jdk\",\n)\n"
            }
          },
          "remotejdk17_linux_ppc64le_toolchain_config_repo": {
            "bzlFile": "@@rules_java~//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:ppc\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_ppc64le//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:ppc\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_ppc64le//:jdk\",\n)\n"
            }
          },
          "remotejdk17_win_arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "6802c99eae0d788e21f52d03cab2e2b3bf42bc334ca03cbf19f71eb70ee19f85",
              "strip_prefix": "zulu17.44.53-ca-jdk17.0.8.1-win_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-win_aarch64.zip",
                "https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-win_aarch64.zip"
              ]
            }
          },
          "remote_java_tools_darwin_arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "sha256": "076a7e198ad077f8c7d997986ef5102427fae6bbfce7a7852d2e080ed8767528",
              "urls": [
                "https://mirror.bazel.build/bazel_java_tools/releases/java/v13.4/java_tools_darwin_arm64-v13.4.zip",
                "https://github.com/bazelbuild/java_tools/releases/download/java_v13.4/java_tools_darwin_arm64-v13.4.zip"
              ]
            }
          },
          "remotejdk17_linux_ppc64le": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "00a4c07603d0218cd678461b5b3b7e25b3253102da4022d31fc35907f21a2efd",
              "strip_prefix": "jdk-17.0.8.1+1",
              "urls": [
                "https://mirror.bazel.build/github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1%2B1/OpenJDK17U-jdk_ppc64le_linux_hotspot_17.0.8.1_1.tar.gz",
                "https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1%2B1/OpenJDK17U-jdk_ppc64le_linux_hotspot_17.0.8.1_1.tar.gz"
              ]
            }
          },
          "remotejdk21_linux_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_linux_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_linux_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk11_win_arm64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:arm64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_win_arm64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:arm64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_win_arm64//:jdk\",\n)\n"
            }
          },
          "local_jdk": {
            "bzlFile": "@@rules_java~//toolchains:local_java_repository.bzl",
            "ruleClassName": "_local_java_repository_rule",
            "attributes": {
              "java_home": "",
              "version": "",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = {RUNTIME_VERSION},\n)\n"
            }
          },
          "remote_java_tools_darwin_x86_64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "sha256": "4523aec4d09c587091a2dae6f5c9bc6922c220f3b6030e5aba9c8f015913cc65",
              "urls": [
                "https://mirror.bazel.build/bazel_java_tools/releases/java/v13.4/java_tools_darwin_x86_64-v13.4.zip",
                "https://github.com/bazelbuild/java_tools/releases/download/java_v13.4/java_tools_darwin_x86_64-v13.4.zip"
              ]
            }
          },
          "remote_java_tools": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "sha256": "e025fd260ac39b47c111f5212d64ec0d00d85dec16e49368aae82fc626a940cf",
              "urls": [
                "https://mirror.bazel.build/bazel_java_tools/releases/java/v13.4/java_tools-v13.4.zip",
                "https://github.com/bazelbuild/java_tools/releases/download/java_v13.4/java_tools-v13.4.zip"
              ]
            }
          },
          "remotejdk17_linux_s390x": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "ffacba69c6843d7ca70d572489d6cc7ab7ae52c60f0852cedf4cf0d248b6fc37",
              "strip_prefix": "jdk-17.0.8.1+1",
              "urls": [
                "https://mirror.bazel.build/github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1%2B1/OpenJDK17U-jdk_s390x_linux_hotspot_17.0.8.1_1.tar.gz",
                "https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1%2B1/OpenJDK17U-jdk_s390x_linux_hotspot_17.0.8.1_1.tar.gz"
              ]
            }
          },
          "remotejdk17_win_toolchain_config_repo": {
            "bzlFile": "@@rules_java~//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_win//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_win//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux_ppc64le": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "a8fba686f6eb8ae1d1a9566821dbd5a85a1108b96ad857fdbac5c1e4649fc56f",
              "strip_prefix": "jdk-11.0.15+10",
              "urls": [
                "https://mirror.bazel.build/github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15+10/OpenJDK11U-jdk_ppc64le_linux_hotspot_11.0.15_10.tar.gz",
                "https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15+10/OpenJDK11U-jdk_ppc64le_linux_hotspot_11.0.15_10.tar.gz"
              ]
            }
          },
          "remotejdk11_macos_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "7632bc29f8a4b7d492b93f3bc75a7b61630894db85d136456035ab2a24d38885",
              "strip_prefix": "zulu11.66.15-ca-jdk11.0.20-macosx_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-macosx_aarch64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-macosx_aarch64.tar.gz"
              ]
            }
          },
          "remotejdk21_win_toolchain_config_repo": {
            "bzlFile": "@@rules_java~//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_win//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_win//:jdk\",\n)\n"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "rules_java~",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "rules_java~",
            "remote_java_tools",
            "rules_java~~toolchains~remote_java_tools"
          ]
        ]
      }
    },
    "@@rules_kotlin~//src/main/starlark/core/repositories:bzlmod_setup.bzl%rules_kotlin_extensions": {
      "general": {
        "bzlTransitiveDigest": "cpxTcL738gCjtgyCx1VmgcsVD8mtk0yaJLtWRwXBKJ8=",
        "recordedFileInputs": {},
        "recordedDirentsInputs": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "rules_android": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "sha256": "cd06d15dd8bb59926e4d65f9003bfc20f9da4b2519985c27e190cddc8b7a7806",
              "strip_prefix": "rules_android-0.1.1",
              "urls": [
                "https://github.com/bazelbuild/rules_android/archive/v0.1.1.zip"
              ]
            }
          },
          "com_github_pinterest_ktlint": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "sha256": "2b3f6f674a944d25bb8d283c3539947bbe86074793012909a55de4b771f74bcc",
              "urls": [
                "https://github.com/pinterest/ktlint/releases/download/0.49.1/ktlint"
              ],
              "executable": true
            }
          },
          "buildkite_config": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "urls": [
                "https://storage.googleapis.com/rbe-toolchain/bazel-configs/rbe-ubuntu1604/latest/rbe_default.tar"
              ]
            }
          },
          "com_github_jetbrains_kotlin": {
            "bzlFile": "@@rules_kotlin~//src/main/starlark/core/repositories:compiler.bzl",
            "ruleClassName": "kotlin_compiler_repository",
            "attributes": {
              "urls": [
                "https://github.com/JetBrains/kotlin/releases/download/v1.9.10/kotlin-compiler-1.9.10.zip"
              ],
              "sha256": "7d74863deecf8e0f28ea54c3735feab003d0eac67e8d3a791254b16889c20342",
              "compiler_version": "1.9.10"
            }
          },
          "com_github_google_ksp": {
            "bzlFile": "@@rules_kotlin~//src/main/starlark/core/repositories:ksp.bzl",
            "ruleClassName": "ksp_compiler_plugin_repository",
            "attributes": {
              "urls": [
                "https://github.com/google/ksp/releases/download/1.9.10-1.0.13/artifacts.zip"
              ],
              "sha256": "5b0b1179e8af40877d9d5929ec0260afb104956eabf2f23bb5568cfd6c20b37b",
              "strip_version": "1.9.10-1.0.13"
            }
          },
          "kt_java_stub_template": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "urls": [
                "https://raw.githubusercontent.com/bazelbuild/bazel/6.2.1/src/main/java/com/google/devtools/build/lib/bazel/rules/java/java_stub_template.txt"
              ],
              "sha256": "78e29525872594ffc783c825f428b3e61d4f3e632f46eaa64f004b2814c4a612"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "rules_kotlin~",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    }
  }
}
